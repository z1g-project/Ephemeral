{
  "version": 3,
  "sources": ["../../node_modules/set-cookie-parser/lib/set-cookie.js", "../../node_modules/acorn/dist/acorn.mjs", "../../node_modules/acorn-loose/dist/acorn-loose.mjs", "../../node_modules/astring/dist/astring.mjs", "../../node_modules/estree-walker/src/walker.js", "../../node_modules/estree-walker/src/sync.js", "../../node_modules/estree-walker/src/index.js", "../../src/rewrite/js.ts", "../../src/rewrite/srcset.ts", "../../node_modules/@parse5/tools/lib/attributes.js", "../../node_modules/parse5/dist/common/unicode.js", "../../node_modules/parse5/dist/common/error-codes.js", "../../node_modules/parse5/dist/tokenizer/preprocessor.js", "../../node_modules/parse5/dist/common/token.js", "../../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../node_modules/entities/lib/esm/decode_codepoint.ts", "../../node_modules/entities/lib/esm/decode.ts", "../../node_modules/parse5/dist/common/html.js", "../../node_modules/parse5/dist/tokenizer/index.js", "../../node_modules/parse5/dist/parser/open-element-stack.js", "../../node_modules/parse5/dist/parser/formatting-element-list.js", "../../node_modules/parse5/dist/tree-adapters/default.js", "../../node_modules/parse5/dist/common/doctype.js", "../../node_modules/parse5/dist/common/foreign-content.js", "../../node_modules/parse5/dist/parser/index.js", "../../node_modules/entities/lib/esm/escape.ts", "../../node_modules/parse5/dist/serializer/index.js", "../../node_modules/parse5/dist/index.js", "../../node_modules/@parse5/tools/lib/creation.js", "../../node_modules/@parse5/tools/lib/typeGuards.js", "../../node_modules/@parse5/tools/lib/traversal.js", "../../node_modules/@parse5/tools/lib/treeMutation.js", "../../node_modules/@parse5/tools/lib/text.js", "../../node_modules/@parse5/tools/lib/traverse.js", "../../src/rewrite/html.ts", "../../src/rewrite/url.ts", "../../src/rewrite/css.ts", "../../src/rewrite/manifest.ts", "../../src/rewrite/unwriteURL.ts", "../../node_modules/idb/build/index.js", "../../src/util/CookieDB.ts", "../../src/util/cookie.ts", "../../src/util/logger.ts", "../../node_modules/@tomphttp/bare-client/src/snapshot.ts", "../../node_modules/@tomphttp/bare-client/src/BareTypes.ts", "../../node_modules/@tomphttp/bare-client/src/Client.ts", "../../node_modules/@tomphttp/bare-client/src/md5.ts", "../../node_modules/@tomphttp/bare-client/src/splitHeaderUtil.ts", "../../node_modules/@tomphttp/bare-client/src/V3.ts", "../../node_modules/@tomphttp/bare-client/src/webSocket.ts", "../../node_modules/@tomphttp/bare-client/src/BareClient.ts", "../../node_modules/@tomphttp/bare-client/src/index.ts", "../../src/bundle.ts"],
  "sourcesContent": ["\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 16, 621, 2467, 541, 1507, 4938, 6, 4191];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range.\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n  return false\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nvar regexpCache = Object.create(null);\n\nfunction wordsRegexp(words) {\n  return regexpCache[words] || (regexpCache[words] = new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\"))\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called when\n  // a semicolon is automatically inserted. It will be passed the\n  // position of the inserted semicolon as an offset, and if\n  // `locations` is enabled, it is given the location as a `{line,\n  // column}` object as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // By default, the parser will verify that private properties are\n  // only used in places where they are valid and have been declared.\n  // Set this to false to turn such checks off.\n  checkPrivateFields: true,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback\u2014that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback\u2014that will corrupt its internal state.\n  // When this option has an array as value, objects representing the\n  // comments are pushed to it.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (!opts || opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'\n  if (context) { return false }\n\n  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseCatchClauseParam = function() {\n  var param = this.parseBindingAtom();\n  var simple = param.type === \"Identifier\";\n  this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n  this.checkLValPattern(param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n  this.expect(types$1.parenR);\n\n  return param\n};\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseCatchClauseParam();\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind, allowMissingInitializer) {\n  this.next();\n  this.parseVar(node, false, kind, allowMissingInitializer);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind, allowMissingInitializer) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (!allowMissingInitializer && kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (!allowMissingInitializer && decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raiseRecoverable(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  if (!this.options.checkPrivateFields) { return }\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExportAllDeclaration = function(node, exports) {\n  if (this.options.ecmaVersion >= 11) {\n    if (this.eatContextual(\"as\")) {\n      node.exported = this.parseModuleExportName();\n      this.checkExport(exports, node.exported, this.lastTokStart);\n    } else {\n      node.exported = null;\n    }\n  }\n  this.expectContextual(\"from\");\n  if (this.type !== types$1.string) { this.unexpected(); }\n  node.source = this.parseExprAtom();\n  this.semicolon();\n  return this.finishNode(node, \"ExportAllDeclaration\")\n};\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    return this.parseExportAllDeclaration(node, exports)\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    node.declaration = this.parseExportDefaultDeclaration();\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseExportDeclaration(node);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.parseExportDeclaration = function(node) {\n  return this.parseStatement(null)\n};\n\npp$8.parseExportDefaultDeclaration = function() {\n  var isAsync;\n  if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n    var fNode = this.startNode();\n    this.next();\n    if (isAsync) { this.next(); }\n    return this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync)\n  } else if (this.type === types$1._class) {\n    var cNode = this.startNode();\n    return this.parseClass(cNode, \"nullableID\")\n  } else {\n    var declaration = this.parseMaybeAssign();\n    this.semicolon();\n    return declaration\n  }\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifier = function(exports) {\n  var node = this.startNode();\n  node.local = this.parseModuleExportName();\n\n  node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n  this.checkExport(\n    exports,\n    node.exported,\n    node.exported.start\n  );\n\n  return this.finishNode(node, \"ExportSpecifier\")\n};\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseExportSpecifier(exports));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifier = function() {\n  var node = this.startNode();\n  node.imported = this.parseModuleExportName();\n\n  if (this.eatContextual(\"as\")) {\n    node.local = this.parseIdent();\n  } else {\n    this.checkUnreserved(node.imported);\n    node.local = node.imported;\n  }\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n\n  return this.finishNode(node, \"ImportSpecifier\")\n};\n\npp$8.parseImportDefaultSpecifier = function() {\n  // import defaultObj, { x, y as z } from '...'\n  var node = this.startNode();\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportDefaultSpecifier\")\n};\n\npp$8.parseImportNamespaceSpecifier = function() {\n  var node = this.startNode();\n  this.next();\n  this.expectContextual(\"as\");\n  node.local = this.parseIdent();\n  this.checkLValSimple(node.local, BIND_LEXICAL);\n  return this.finishNode(node, \"ImportNamespaceSpecifier\")\n};\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    nodes.push(this.parseImportDefaultSpecifier());\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    nodes.push(this.parseImportNamespaceSpecifier());\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    nodes.push(this.parseImportSpecifier());\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma, allowModifiers) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      elts.push(this.parseAssignableListItem(allowModifiers));\n    }\n  }\n  return elts\n};\n\npp$7.parseAssignableListItem = function(allowModifiers) {\n  var elem = this.parseMaybeDefault(this.start, this.startLoc);\n  this.parseBindingListItem(elem);\n  return elem\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue \u2014\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += \u2026;\n//     import a from '\u2026';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = \u2026);\n//     const a = \u2026;\n//     try { \u2026 } catch (a) { \u2026 }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle edge cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.colon.updateContext = function() {\n  if (this.curContext().token === \"function\") { this.context.pop(); }\n  this.exprAllowed = true;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts \u2014 that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash \u2014\n// either with each other or with an init property \u2014 and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.shouldParseAsyncArrow = function() {\n  return !this.canInsertSemicolon() && this.eat(types$1.arrow)\n};\n\npp$5.parseSubscriptAsyncArrow = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseSubscriptAsyncArrow(startPos, startLoc, exprList, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression \u2014 either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit, forNew) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport(forNew)\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    return this.parseExprAtomDefault()\n  }\n};\n\npp$5.parseExprAtomDefault = function() {\n  this.unexpected();\n};\n\npp$5.parseExprImport = function(forNew) {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  this.next();\n\n  if (this.type === types$1.parenL && !forNew) {\n    return this.parseDynamicImport(node)\n  } else if (this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"import\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    return this.parseImportMeta(node)\n  } else {\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.shouldParseArrow = function(exprList) {\n  return !this.canInsertSemicolon()\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) {\n          this.raiseRecoverable(\n            this.start,\n            \"Comma is not permitted after the rest element\"\n          );\n        }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call \u2014 at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  this.next();\n  if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\n    var meta = this.startNodeAt(node.start, node.loc && node.loc.start);\n    meta.name = \"new\";\n    node.meta = this.finishNode(meta, \"Identifier\");\n    this.next();\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(null, false, true), startPos, startLoc, true, false);\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raiseRecoverable(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parseGetterSetter = function(prop) {\n  prop.kind = prop.key.name;\n  this.parsePropertyName(prop);\n  prop.value = this.parseMethod(false);\n  var paramCount = prop.kind === \"get\" ? 0 : 1;\n  if (prop.value.params.length !== paramCount) {\n    var start = prop.value.start;\n    if (prop.kind === \"get\")\n      { this.raiseRecoverable(start, \"getter should have no params\"); }\n    else\n      { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n  } else {\n    if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n  }\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.parseGetterSetter(prop);\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal) {\n  var node = this.parseIdentNode();\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parseIdentNode = function() {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n      (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n    this.type = types$1.name;\n  } else {\n    this.unexpected();\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.options.checkPrivateFields) {\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar ecma14BinaryProperties = ecma13BinaryProperties;\n\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties,\n  14: ecma14BinaryProperties\n};\n\n// #table-binary-unicode-properties-of-strings\nvar ecma14BinaryPropertiesOfStrings = \"Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji\";\n\nvar unicodeBinaryPropertiesOfStrings = {\n  9: \"\",\n  10: \"\",\n  11: \"\",\n  12: \"\",\n  13: \"\",\n  14: ecma14BinaryPropertiesOfStrings\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar ecma14ScriptValues = ecma13ScriptValues + \" Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz\";\n\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues,\n  14: ecma14ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion]),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\") + (parser.options.ecmaVersion >= 15 ? \"v\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchV = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicodeSets = flags.indexOf(\"v\") !== -1;\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\n    this.switchU = true;\n    this.switchV = true;\n    this.switchN = true;\n  } else {\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchV = false;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  }\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\nRegExpValidationState.prototype.eatChars = function eatChars (chs, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var pos = this.pos;\n  for (var i = 0, list = chs; i < list.length; i += 1) {\n    var ch = list[i];\n\n      var current = this.at(pos, forceU);\n    if (current === -1 || current !== ch) {\n      return false\n    }\n    pos = this.nextIndex(pos, forceU);\n  }\n  this.pos = pos;\n  return true\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  var u = false;\n  var v = false;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n    if (flag === \"u\") { u = true; }\n    if (flag === \"v\") { v = true; }\n  }\n  if (this.options.ecmaVersion >= 15 && u && v) {\n    this.raise(state.start, \"Invalid regular expression flag\");\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// Return values used by character set parsing methods, needed to\n// forbid negation of sets that can match strings.\nvar CharSetNone = 0; // Nothing parsed\nvar CharSetOk = 1; // Construct parsed, cannot contain strings\nvar CharSetString = 2; // Construct parsed, can contain strings\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return CharSetOk\n  }\n\n  var negate = false;\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    var result;\n    if (\n      state.eat(0x7B /* { */) &&\n      (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\n      state.eat(0x7D /* } */)\n    ) {\n      if (negate && result === CharSetString) { state.raise(\"Invalid property name\"); }\n      return result\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return CharSetNone\n};\n\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return CharSetOk\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    return this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue)\n  }\n  return CharSetNone\n};\n\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\n\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\n  if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\n  state.raise(\"Invalid property name\");\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\n\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (!state.eat(0x5D /* ] */))\n      { state.raise(\"Unterminated character class\"); }\n    if (negate && result === CharSetString)\n      { state.raise(\"Negated character class may contain strings\"); }\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassContents\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\npp$1.regexp_classContents = function(state) {\n  if (state.current() === 0x5D /* ] */) { return CharSetOk }\n  if (state.switchV) { return this.regexp_classSetExpression(state) }\n  this.regexp_nonEmptyClassRanges(state);\n  return CharSetOk\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_nonEmptyClassRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetExpression\n// https://tc39.es/ecma262/#prod-ClassUnion\n// https://tc39.es/ecma262/#prod-ClassIntersection\n// https://tc39.es/ecma262/#prod-ClassSubtraction\npp$1.regexp_classSetExpression = function(state) {\n  var result = CharSetOk, subResult;\n  if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\n    if (subResult === CharSetString) { result = CharSetString; }\n    // https://tc39.es/ecma262/#prod-ClassIntersection\n    var start = state.pos;\n    while (state.eatChars([0x26, 0x26] /* && */)) {\n      if (\n        state.current() !== 0x26 /* & */ &&\n        (subResult = this.regexp_eatClassSetOperand(state))\n      ) {\n        if (subResult !== CharSetString) { result = CharSetOk; }\n        continue\n      }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n    // https://tc39.es/ecma262/#prod-ClassSubtraction\n    while (state.eatChars([0x2D, 0x2D] /* -- */)) {\n      if (this.regexp_eatClassSetOperand(state)) { continue }\n      state.raise(\"Invalid character in character class\");\n    }\n    if (start !== state.pos) { return result }\n  } else {\n    state.raise(\"Invalid character in character class\");\n  }\n  // https://tc39.es/ecma262/#prod-ClassUnion\n  for (;;) {\n    if (this.regexp_eatClassSetRange(state)) { continue }\n    subResult = this.regexp_eatClassSetOperand(state);\n    if (!subResult) { return result }\n    if (subResult === CharSetString) { result = CharSetString; }\n  }\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetRange\npp$1.regexp_eatClassSetRange = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatClassSetCharacter(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\n      var right = state.lastIntValue;\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetOperand\npp$1.regexp_eatClassSetOperand = function(state) {\n  if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\n  return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\n};\n\n// https://tc39.es/ecma262/#prod-NestedClass\npp$1.regexp_eatNestedClass = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5B /* [ */)) {\n    var negate = state.eat(0x5E /* ^ */);\n    var result = this.regexp_classContents(state);\n    if (state.eat(0x5D /* ] */)) {\n      if (negate && result === CharSetString) {\n        state.raise(\"Negated character class may contain strings\");\n      }\n      return result\n    }\n    state.pos = start;\n  }\n  if (state.eat(0x5C /* \\ */)) {\n    var result$1 = this.regexp_eatCharacterClassEscape(state);\n    if (result$1) {\n      return result$1\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunction\npp$1.regexp_eatClassStringDisjunction = function(state) {\n  var start = state.pos;\n  if (state.eatChars([0x5C, 0x71] /* \\q */)) {\n    if (state.eat(0x7B /* { */)) {\n      var result = this.regexp_classStringDisjunctionContents(state);\n      if (state.eat(0x7D /* } */)) {\n        return result\n      }\n    } else {\n      // Make the same message as V8.\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return null\n};\n\n// https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\npp$1.regexp_classStringDisjunctionContents = function(state) {\n  var result = this.regexp_classString(state);\n  while (state.eat(0x7C /* | */)) {\n    if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\n  }\n  return result\n};\n\n// https://tc39.es/ecma262/#prod-ClassString\n// https://tc39.es/ecma262/#prod-NonEmptyClassString\npp$1.regexp_classString = function(state) {\n  var count = 0;\n  while (this.regexp_eatClassSetCharacter(state)) { count++; }\n  return count === 1 ? CharSetOk : CharSetString\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetCharacter\npp$1.regexp_eatClassSetCharacter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (\n      this.regexp_eatCharacterEscape(state) ||\n      this.regexp_eatClassSetReservedPunctuator(state)\n    ) {\n      return true\n    }\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n    state.pos = start;\n    return false\n  }\n  var ch = state.current();\n  if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\n  if (isClassSetSyntaxCharacter(ch)) { return false }\n  state.advance();\n  state.lastIntValue = ch;\n  return true\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\nfunction isClassSetReservedDoublePunctuatorCharacter(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\n    ch >= 0x2A /* * */ && ch <= 0x2C /* , */ ||\n    ch === 0x2E /* . */ ||\n    ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\n    ch === 0x5E /* ^ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\nfunction isClassSetSyntaxCharacter(ch) {\n  return (\n    ch === 0x28 /* ( */ ||\n    ch === 0x29 /* ) */ ||\n    ch === 0x2D /* - */ ||\n    ch === 0x2F /* / */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\npp$1.regexp_eatClassSetReservedPunctuator = function(state) {\n  var ch = state.current();\n  if (isClassSetReservedPunctuator(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\nfunction isClassSetReservedPunctuator(ch) {\n  return (\n    ch === 0x21 /* ! */ ||\n    ch === 0x23 /* # */ ||\n    ch === 0x25 /* % */ ||\n    ch === 0x26 /* & */ ||\n    ch === 0x2C /* , */ ||\n    ch === 0x2D /* - */ ||\n    ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\n    ch === 0x40 /* @ */ ||\n    ch === 0x60 /* ` */ ||\n    ch === 0x7E /* ~ */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// [walk]: util/walk.js\n\n\nvar version = \"8.11.3\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and returns\n// an abstract syntax tree as specified by the [ESTree spec][estree].\n//\n// [estree]: https://github.com/estree/estree\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n", "import { tokTypes, SourceLocation, Node, lineBreak, isNewLine, Parser, Token, getLineInfo, lineBreakG, tokContexts, defaultOptions } from 'acorn';\n\nvar dummyValue = \"\u2716\";\n\nfunction isDummy(node) { return node.name === dummyValue }\n\nfunction noop() {}\n\nvar LooseParser = function LooseParser(input, options) {\n  if ( options === void 0 ) options = {};\n\n  this.toks = this.constructor.BaseParser.tokenizer(input, options);\n  this.options = this.toks.options;\n  this.input = this.toks.input;\n  this.tok = this.last = {type: tokTypes.eof, start: 0, end: 0};\n  this.tok.validateRegExpFlags = noop;\n  this.tok.validateRegExpPattern = noop;\n  if (this.options.locations) {\n    var here = this.toks.curPosition();\n    this.tok.loc = new SourceLocation(this.toks, here, here);\n  }\n  this.ahead = []; // Tokens ahead\n  this.context = []; // Indentation contexted\n  this.curIndent = 0;\n  this.curLineStart = 0;\n  this.nextLineStart = this.lineEnd(this.curLineStart) + 1;\n  this.inAsync = false;\n  this.inGenerator = false;\n  this.inFunction = false;\n};\n\nLooseParser.prototype.startNode = function startNode () {\n  return new Node(this.toks, this.tok.start, this.options.locations ? this.tok.loc.start : null)\n};\n\nLooseParser.prototype.storeCurrentPos = function storeCurrentPos () {\n  return this.options.locations ? [this.tok.start, this.tok.loc.start] : this.tok.start\n};\n\nLooseParser.prototype.startNodeAt = function startNodeAt (pos) {\n  if (this.options.locations) {\n    return new Node(this.toks, pos[0], pos[1])\n  } else {\n    return new Node(this.toks, pos)\n  }\n};\n\nLooseParser.prototype.finishNode = function finishNode (node, type) {\n  node.type = type;\n  node.end = this.last.end;\n  if (this.options.locations)\n    { node.loc.end = this.last.loc.end; }\n  if (this.options.ranges)\n    { node.range[1] = this.last.end; }\n  return node\n};\n\nLooseParser.prototype.dummyNode = function dummyNode (type) {\n  var dummy = this.startNode();\n  dummy.type = type;\n  dummy.end = dummy.start;\n  if (this.options.locations)\n    { dummy.loc.end = dummy.loc.start; }\n  if (this.options.ranges)\n    { dummy.range[1] = dummy.start; }\n  this.last = {type: tokTypes.name, start: dummy.start, end: dummy.start, loc: dummy.loc};\n  return dummy\n};\n\nLooseParser.prototype.dummyIdent = function dummyIdent () {\n  var dummy = this.dummyNode(\"Identifier\");\n  dummy.name = dummyValue;\n  return dummy\n};\n\nLooseParser.prototype.dummyString = function dummyString () {\n  var dummy = this.dummyNode(\"Literal\");\n  dummy.value = dummy.raw = dummyValue;\n  return dummy\n};\n\nLooseParser.prototype.eat = function eat (type) {\n  if (this.tok.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\nLooseParser.prototype.isContextual = function isContextual (name) {\n  return this.tok.type === tokTypes.name && this.tok.value === name\n};\n\nLooseParser.prototype.eatContextual = function eatContextual (name) {\n  return this.tok.value === name && this.eat(tokTypes.name)\n};\n\nLooseParser.prototype.canInsertSemicolon = function canInsertSemicolon () {\n  return this.tok.type === tokTypes.eof || this.tok.type === tokTypes.braceR ||\n    lineBreak.test(this.input.slice(this.last.end, this.tok.start))\n};\n\nLooseParser.prototype.semicolon = function semicolon () {\n  return this.eat(tokTypes.semi)\n};\n\nLooseParser.prototype.expect = function expect (type) {\n  if (this.eat(type)) { return true }\n  for (var i = 1; i <= 2; i++) {\n    if (this.lookAhead(i).type === type) {\n      for (var j = 0; j < i; j++) { this.next(); }\n      return true\n    }\n  }\n};\n\nLooseParser.prototype.pushCx = function pushCx () {\n  this.context.push(this.curIndent);\n};\n\nLooseParser.prototype.popCx = function popCx () {\n  this.curIndent = this.context.pop();\n};\n\nLooseParser.prototype.lineEnd = function lineEnd (pos) {\n  while (pos < this.input.length && !isNewLine(this.input.charCodeAt(pos))) { ++pos; }\n  return pos\n};\n\nLooseParser.prototype.indentationAfter = function indentationAfter (pos) {\n  for (var count = 0;; ++pos) {\n    var ch = this.input.charCodeAt(pos);\n    if (ch === 32) { ++count; }\n    else if (ch === 9) { count += this.options.tabSize; }\n    else { return count }\n  }\n};\n\nLooseParser.prototype.closes = function closes (closeTok, indent, line, blockHeuristic) {\n  if (this.tok.type === closeTok || this.tok.type === tokTypes.eof) { return true }\n  return line !== this.curLineStart && this.curIndent < indent && this.tokenStartsLine() &&\n    (!blockHeuristic || this.nextLineStart >= this.input.length ||\n     this.indentationAfter(this.nextLineStart) < indent)\n};\n\nLooseParser.prototype.tokenStartsLine = function tokenStartsLine () {\n  for (var p = this.tok.start - 1; p >= this.curLineStart; --p) {\n    var ch = this.input.charCodeAt(p);\n    if (ch !== 9 && ch !== 32) { return false }\n  }\n  return true\n};\n\nLooseParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nLooseParser.prototype.parse = function parse () {\n  this.next();\n  return this.parseTopLevel()\n};\n\nLooseParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nLooseParser.parse = function parse (input, options) {\n  return new this(input, options).parse()\n};\n\n// Allows plugins to extend the base parser / tokenizer used\nLooseParser.BaseParser = Parser;\n\nvar lp$2 = LooseParser.prototype;\n\nfunction isSpace(ch) {\n  return (ch < 14 && ch > 8) || ch === 32 || ch === 160 || isNewLine(ch)\n}\n\nlp$2.next = function() {\n  this.last = this.tok;\n  if (this.ahead.length)\n    { this.tok = this.ahead.shift(); }\n  else\n    { this.tok = this.readToken(); }\n\n  if (this.tok.start >= this.nextLineStart) {\n    while (this.tok.start >= this.nextLineStart) {\n      this.curLineStart = this.nextLineStart;\n      this.nextLineStart = this.lineEnd(this.curLineStart) + 1;\n    }\n    this.curIndent = this.indentationAfter(this.curLineStart);\n  }\n};\n\nlp$2.readToken = function() {\n  for (;;) {\n    try {\n      this.toks.next();\n      if (this.toks.type === tokTypes.dot &&\n          this.input.substr(this.toks.end, 1) === \".\" &&\n          this.options.ecmaVersion >= 6) {\n        this.toks.end++;\n        this.toks.type = tokTypes.ellipsis;\n      }\n      return new Token(this.toks)\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) { throw e }\n\n      // Try to skip some text, based on the error message, and then continue\n      var msg = e.message, pos = e.raisedAt, replace = true;\n      if (/unterminated/i.test(msg)) {\n        pos = this.lineEnd(e.pos + 1);\n        if (/string/.test(msg)) {\n          replace = {start: e.pos, end: pos, type: tokTypes.string, value: this.input.slice(e.pos + 1, pos)};\n        } else if (/regular expr/i.test(msg)) {\n          var re = this.input.slice(e.pos, pos);\n          try { re = new RegExp(re); } catch (e$1) { /* ignore compilation error due to new syntax */ }\n          replace = {start: e.pos, end: pos, type: tokTypes.regexp, value: re};\n        } else if (/template/.test(msg)) {\n          replace = {\n            start: e.pos,\n            end: pos,\n            type: tokTypes.template,\n            value: this.input.slice(e.pos, pos)\n          };\n        } else {\n          replace = false;\n        }\n      } else if (/invalid (unicode|regexp|number)|expecting unicode|octal literal|is reserved|directly after number|expected number in radix/i.test(msg)) {\n        while (pos < this.input.length && !isSpace(this.input.charCodeAt(pos))) { ++pos; }\n      } else if (/character escape|expected hexadecimal/i.test(msg)) {\n        while (pos < this.input.length) {\n          var ch = this.input.charCodeAt(pos++);\n          if (ch === 34 || ch === 39 || isNewLine(ch)) { break }\n        }\n      } else if (/unexpected character/i.test(msg)) {\n        pos++;\n        replace = false;\n      } else if (/regular expression/i.test(msg)) {\n        replace = true;\n      } else {\n        throw e\n      }\n      this.resetTo(pos);\n      if (replace === true) { replace = {start: pos, end: pos, type: tokTypes.name, value: dummyValue}; }\n      if (replace) {\n        if (this.options.locations)\n          { replace.loc = new SourceLocation(\n            this.toks,\n            getLineInfo(this.input, replace.start),\n            getLineInfo(this.input, replace.end)); }\n        return replace\n      }\n    }\n  }\n};\n\nlp$2.resetTo = function(pos) {\n  this.toks.pos = pos;\n  this.toks.containsEsc = false;\n  var ch = this.input.charAt(pos - 1);\n  this.toks.exprAllowed = !ch || /[[{(,;:?/*=+\\-~!|&%^<>]/.test(ch) ||\n    /[enwfd]/.test(ch) &&\n    /\\b(case|else|return|throw|new|in|(instance|type)?of|delete|void)$/.test(this.input.slice(pos - 10, pos));\n\n  if (this.options.locations) {\n    this.toks.curLine = 1;\n    this.toks.lineStart = lineBreakG.lastIndex = 0;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < pos) {\n      ++this.toks.curLine;\n      this.toks.lineStart = match.index + match[0].length;\n    }\n  }\n};\n\nlp$2.lookAhead = function(n) {\n  while (n > this.ahead.length)\n    { this.ahead.push(this.readToken()); }\n  return this.ahead[n - 1]\n};\n\nvar lp$1 = LooseParser.prototype;\n\nlp$1.parseTopLevel = function() {\n  var node = this.startNodeAt(this.options.locations ? [0, getLineInfo(this.input, 0)] : 0);\n  node.body = [];\n  while (this.tok.type !== tokTypes.eof) { node.body.push(this.parseStatement()); }\n  this.toks.adaptDirectivePrologue(node.body);\n  this.last = this.tok;\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nlp$1.parseStatement = function() {\n  var starttype = this.tok.type, node = this.startNode(), kind;\n\n  if (this.toks.isLet()) {\n    starttype = tokTypes._var;\n    kind = \"let\";\n  }\n\n  switch (starttype) {\n  case tokTypes._break: case tokTypes._continue:\n    this.next();\n    var isBreak = starttype === tokTypes._break;\n    if (this.semicolon() || this.canInsertSemicolon()) {\n      node.label = null;\n    } else {\n      node.label = this.tok.type === tokTypes.name ? this.parseIdent() : null;\n      this.semicolon();\n    }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n\n  case tokTypes._debugger:\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n\n  case tokTypes._do:\n    this.next();\n    node.body = this.parseStatement();\n    node.test = this.eat(tokTypes._while) ? this.parseParenExpression() : this.dummyIdent();\n    this.semicolon();\n    return this.finishNode(node, \"DoWhileStatement\")\n\n  case tokTypes._for:\n    this.next(); // `for` keyword\n    var isAwait = this.options.ecmaVersion >= 9 && this.eatContextual(\"await\");\n\n    this.pushCx();\n    this.expect(tokTypes.parenL);\n    if (this.tok.type === tokTypes.semi) { return this.parseFor(node, null) }\n    var isLet = this.toks.isLet();\n    if (isLet || this.tok.type === tokTypes._var || this.tok.type === tokTypes._const) {\n      var init$1 = this.parseVar(this.startNode(), true, isLet ? \"let\" : this.tok.value);\n      if (init$1.declarations.length === 1 && (this.tok.type === tokTypes._in || this.isContextual(\"of\"))) {\n        if (this.options.ecmaVersion >= 9 && this.tok.type !== tokTypes._in) {\n          node.await = isAwait;\n        }\n        return this.parseForIn(node, init$1)\n      }\n      return this.parseFor(node, init$1)\n    }\n    var init = this.parseExpression(true);\n    if (this.tok.type === tokTypes._in || this.isContextual(\"of\")) {\n      if (this.options.ecmaVersion >= 9 && this.tok.type !== tokTypes._in) {\n        node.await = isAwait;\n      }\n      return this.parseForIn(node, this.toAssignable(init))\n    }\n    return this.parseFor(node, init)\n\n  case tokTypes._function:\n    this.next();\n    return this.parseFunction(node, true)\n\n  case tokTypes._if:\n    this.next();\n    node.test = this.parseParenExpression();\n    node.consequent = this.parseStatement();\n    node.alternate = this.eat(tokTypes._else) ? this.parseStatement() : null;\n    return this.finishNode(node, \"IfStatement\")\n\n  case tokTypes._return:\n    this.next();\n    if (this.eat(tokTypes.semi) || this.canInsertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n\n  case tokTypes._switch:\n    var blockIndent = this.curIndent, line = this.curLineStart;\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.pushCx();\n    this.expect(tokTypes.braceL);\n\n    var cur;\n    while (!this.closes(tokTypes.braceR, blockIndent, line, true)) {\n      if (this.tok.type === tokTypes._case || this.tok.type === tokTypes._default) {\n        var isCase = this.tok.type === tokTypes._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) { cur.test = this.parseExpression(); }\n        else { cur.test = null; }\n        this.expect(tokTypes.colon);\n      } else {\n        if (!cur) {\n          node.cases.push(cur = this.startNode());\n          cur.consequent = [];\n          cur.test = null;\n        }\n        cur.consequent.push(this.parseStatement());\n      }\n    }\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.popCx();\n    this.eat(tokTypes.braceR);\n    return this.finishNode(node, \"SwitchStatement\")\n\n  case tokTypes._throw:\n    this.next();\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n\n  case tokTypes._try:\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.tok.type === tokTypes._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(tokTypes.parenL)) {\n        clause.param = this.toAssignable(this.parseExprAtom(), true);\n        this.expect(tokTypes.parenR);\n      } else {\n        clause.param = null;\n      }\n      clause.body = this.parseBlock();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(tokTypes._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer) { return node.block }\n    return this.finishNode(node, \"TryStatement\")\n\n  case tokTypes._var:\n  case tokTypes._const:\n    return this.parseVar(node, false, kind || this.tok.value)\n\n  case tokTypes._while:\n    this.next();\n    node.test = this.parseParenExpression();\n    node.body = this.parseStatement();\n    return this.finishNode(node, \"WhileStatement\")\n\n  case tokTypes._with:\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement();\n    return this.finishNode(node, \"WithStatement\")\n\n  case tokTypes.braceL:\n    return this.parseBlock()\n\n  case tokTypes.semi:\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n\n  case tokTypes._class:\n    return this.parseClass(true)\n\n  case tokTypes._import:\n    if (this.options.ecmaVersion > 10) {\n      var nextType = this.lookAhead(1).type;\n      if (nextType === tokTypes.parenL || nextType === tokTypes.dot) {\n        node.expression = this.parseExpression();\n        this.semicolon();\n        return this.finishNode(node, \"ExpressionStatement\")\n      }\n    }\n\n    return this.parseImport()\n\n  case tokTypes._export:\n    return this.parseExport()\n\n  default:\n    if (this.toks.isAsyncFunction()) {\n      this.next();\n      this.next();\n      return this.parseFunction(node, true, true)\n    }\n    var expr = this.parseExpression();\n    if (isDummy(expr)) {\n      this.next();\n      if (this.tok.type === tokTypes.eof) { return this.finishNode(node, \"EmptyStatement\") }\n      return this.parseStatement()\n    } else if (starttype === tokTypes.name && expr.type === \"Identifier\" && this.eat(tokTypes.colon)) {\n      node.body = this.parseStatement();\n      node.label = expr;\n      return this.finishNode(node, \"LabeledStatement\")\n    } else {\n      node.expression = expr;\n      this.semicolon();\n      return this.finishNode(node, \"ExpressionStatement\")\n    }\n  }\n};\n\nlp$1.parseBlock = function() {\n  var node = this.startNode();\n  this.pushCx();\n  this.expect(tokTypes.braceL);\n  var blockIndent = this.curIndent, line = this.curLineStart;\n  node.body = [];\n  while (!this.closes(tokTypes.braceR, blockIndent, line, true))\n    { node.body.push(this.parseStatement()); }\n  this.popCx();\n  this.eat(tokTypes.braceR);\n  return this.finishNode(node, \"BlockStatement\")\n};\n\nlp$1.parseFor = function(node, init) {\n  node.init = init;\n  node.test = node.update = null;\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.semi) { node.test = this.parseExpression(); }\n  if (this.eat(tokTypes.semi) && this.tok.type !== tokTypes.parenR) { node.update = this.parseExpression(); }\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  node.body = this.parseStatement();\n  return this.finishNode(node, \"ForStatement\")\n};\n\nlp$1.parseForIn = function(node, init) {\n  var type = this.tok.type === tokTypes._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  node.left = init;\n  node.right = this.parseExpression();\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  node.body = this.parseStatement();\n  return this.finishNode(node, type)\n};\n\nlp$1.parseVar = function(node, noIn, kind) {\n  node.kind = kind;\n  this.next();\n  node.declarations = [];\n  do {\n    var decl = this.startNode();\n    decl.id = this.options.ecmaVersion >= 6 ? this.toAssignable(this.parseExprAtom(), true) : this.parseIdent();\n    decl.init = this.eat(tokTypes.eq) ? this.parseMaybeAssign(noIn) : null;\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n  } while (this.eat(tokTypes.comma))\n  if (!node.declarations.length) {\n    var decl$1 = this.startNode();\n    decl$1.id = this.dummyIdent();\n    node.declarations.push(this.finishNode(decl$1, \"VariableDeclarator\"));\n  }\n  if (!noIn) { this.semicolon(); }\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\nlp$1.parseClass = function(isStatement) {\n  var node = this.startNode();\n  this.next();\n  if (this.tok.type === tokTypes.name) { node.id = this.parseIdent(); }\n  else if (isStatement === true) { node.id = this.dummyIdent(); }\n  else { node.id = null; }\n  node.superClass = this.eat(tokTypes._extends) ? this.parseExpression() : null;\n  node.body = this.startNode();\n  node.body.body = [];\n  this.pushCx();\n  var indent = this.curIndent + 1, line = this.curLineStart;\n  this.eat(tokTypes.braceL);\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    var element = this.parseClassElement();\n    if (element) { node.body.body.push(element); }\n  }\n  this.popCx();\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  this.semicolon();\n  this.finishNode(node.body, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\nlp$1.parseClassElement = function() {\n  if (this.eat(tokTypes.semi)) { return null }\n\n  var ref = this.options;\n  var ecmaVersion = ref.ecmaVersion;\n  var locations = ref.locations;\n  var indent = this.curIndent;\n  var line = this.curLineStart;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(tokTypes.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.toks.type === tokTypes.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.toks.type === tokTypes.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName) {\n    isGenerator = this.eat(tokTypes.star);\n    var lastValue = this.toks.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(locations ? [this.toks.lastTokStart, this.toks.lastTokStartLoc] : this.toks.lastTokStart);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n\n    // From https://github.com/acornjs/acorn/blob/7deba41118d6384a2c498c61176b3cf434f69590/acorn-loose/src/statement.js#L291\n    // Skip broken stuff.\n    if (isDummy(node.key)) {\n      if (isDummy(this.parseMaybeAssign())) { this.next(); }\n      this.eat(tokTypes.comma);\n      return null\n    }\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.toks.type === tokTypes.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    // Method\n    var isConstructor =\n      !node.computed &&\n      !node.static &&\n      !isGenerator &&\n      !isAsync &&\n      kind === \"method\" && (\n        node.key.type === \"Identifier\" && node.key.name === \"constructor\" ||\n        node.key.type === \"Literal\" && node.key.value === \"constructor\"\n      );\n    node.kind = isConstructor ? \"constructor\" : kind;\n    node.value = this.parseMethod(isGenerator, isAsync);\n    this.finishNode(node, \"MethodDefinition\");\n  } else {\n    // Field\n    if (this.eat(tokTypes.eq)) {\n      if (this.curLineStart !== line && this.curIndent <= indent && this.tokenStartsLine()) {\n        // Estimated the next line is the next class element by indentations.\n        node.value = null;\n      } else {\n        var oldInAsync = this.inAsync;\n        var oldInGenerator = this.inGenerator;\n        this.inAsync = false;\n        this.inGenerator = false;\n        node.value = this.parseMaybeAssign();\n        this.inAsync = oldInAsync;\n        this.inGenerator = oldInGenerator;\n      }\n    } else {\n      node.value = null;\n    }\n    this.semicolon();\n    this.finishNode(node, \"PropertyDefinition\");\n  }\n\n  return node\n};\n\nlp$1.parseClassStaticBlock = function(node) {\n  var blockIndent = this.curIndent, line = this.curLineStart;\n  node.body = [];\n  this.pushCx();\n  while (!this.closes(tokTypes.braceR, blockIndent, line, true))\n    { node.body.push(this.parseStatement()); }\n  this.popCx();\n  this.eat(tokTypes.braceR);\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\nlp$1.isClassElementNameStart = function() {\n  return this.toks.isClassElementNameStart()\n};\n\nlp$1.parseClassElementName = function(element) {\n  if (this.toks.type === tokTypes.privateId) {\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\nlp$1.parseFunction = function(node, isStatement, isAsync) {\n  var oldInAsync = this.inAsync, oldInGenerator = this.inGenerator, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = this.eat(tokTypes.star);\n  }\n  if (this.options.ecmaVersion >= 8) {\n    node.async = !!isAsync;\n  }\n  if (this.tok.type === tokTypes.name) { node.id = this.parseIdent(); }\n  else if (isStatement === true) { node.id = this.dummyIdent(); }\n  this.inAsync = node.async;\n  this.inGenerator = node.generator;\n  this.inFunction = true;\n  node.params = this.parseFunctionParams();\n  node.body = this.parseBlock();\n  this.toks.adaptDirectivePrologue(node.body.body);\n  this.inAsync = oldInAsync;\n  this.inGenerator = oldInGenerator;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\nlp$1.parseExport = function() {\n  var node = this.startNode();\n  this.next();\n  if (this.eat(tokTypes.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseExprAtom();\n      } else {\n        node.exported = null;\n      }\n    }\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : this.dummyString();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(tokTypes._default)) {\n    // export default (function foo() {}) // This is FunctionExpression.\n    var isAsync;\n    if (this.tok.type === tokTypes._function || (isAsync = this.toks.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", isAsync);\n    } else if (this.tok.type === tokTypes._class) {\n      node.declaration = this.parseClass(\"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  if (this.tok.type.keyword || this.toks.isLet() || this.toks.isAsyncFunction()) {\n    node.declaration = this.parseStatement();\n    node.specifiers = [];\n    node.source = null;\n  } else {\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifierList();\n    node.source = this.eatContextual(\"from\") ? this.parseExprAtom() : null;\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\nlp$1.parseImport = function() {\n  var node = this.startNode();\n  this.next();\n  if (this.tok.type === tokTypes.string) {\n    node.specifiers = [];\n    node.source = this.parseExprAtom();\n  } else {\n    var elt;\n    if (this.tok.type === tokTypes.name && this.tok.value !== \"from\") {\n      elt = this.startNode();\n      elt.local = this.parseIdent();\n      this.finishNode(elt, \"ImportDefaultSpecifier\");\n      this.eat(tokTypes.comma);\n    }\n    node.specifiers = this.parseImportSpecifiers();\n    node.source = this.eatContextual(\"from\") && this.tok.type === tokTypes.string ? this.parseExprAtom() : this.dummyString();\n    if (elt) { node.specifiers.unshift(elt); }\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\nlp$1.parseImportSpecifiers = function() {\n  var elts = [];\n  if (this.tok.type === tokTypes.star) {\n    var elt = this.startNode();\n    this.next();\n    elt.local = this.eatContextual(\"as\") ? this.parseIdent() : this.dummyIdent();\n    elts.push(this.finishNode(elt, \"ImportNamespaceSpecifier\"));\n  } else {\n    var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart;\n    this.pushCx();\n    this.eat(tokTypes.braceL);\n    if (this.curLineStart > continuedLine) { continuedLine = this.curLineStart; }\n    while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n      var elt$1 = this.startNode();\n      if (this.eat(tokTypes.star)) {\n        elt$1.local = this.eatContextual(\"as\") ? this.parseModuleExportName() : this.dummyIdent();\n        this.finishNode(elt$1, \"ImportNamespaceSpecifier\");\n      } else {\n        if (this.isContextual(\"from\")) { break }\n        elt$1.imported = this.parseModuleExportName();\n        if (isDummy(elt$1.imported)) { break }\n        elt$1.local = this.eatContextual(\"as\") ? this.parseModuleExportName() : elt$1.imported;\n        this.finishNode(elt$1, \"ImportSpecifier\");\n      }\n      elts.push(elt$1);\n      this.eat(tokTypes.comma);\n    }\n    this.eat(tokTypes.braceR);\n    this.popCx();\n  }\n  return elts\n};\n\nlp$1.parseExportSpecifierList = function() {\n  var elts = [];\n  var indent = this.curIndent, line = this.curLineStart, continuedLine = this.nextLineStart;\n  this.pushCx();\n  this.eat(tokTypes.braceL);\n  if (this.curLineStart > continuedLine) { continuedLine = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent + (this.curLineStart <= continuedLine ? 1 : 0), line)) {\n    if (this.isContextual(\"from\")) { break }\n    var elt = this.startNode();\n    elt.local = this.parseModuleExportName();\n    if (isDummy(elt.local)) { break }\n    elt.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : elt.local;\n    this.finishNode(elt, \"ExportSpecifier\");\n    elts.push(elt);\n    this.eat(tokTypes.comma);\n  }\n  this.eat(tokTypes.braceR);\n  this.popCx();\n  return elts\n};\n\nlp$1.parseModuleExportName = function() {\n  return this.options.ecmaVersion >= 13 && this.tok.type === tokTypes.string\n    ? this.parseExprAtom()\n    : this.parseIdent()\n};\n\nvar lp = LooseParser.prototype;\n\nlp.checkLVal = function(expr) {\n  if (!expr) { return expr }\n  switch (expr.type) {\n  case \"Identifier\":\n  case \"MemberExpression\":\n    return expr\n\n  case \"ParenthesizedExpression\":\n    expr.expression = this.checkLVal(expr.expression);\n    return expr\n\n  default:\n    return this.dummyIdent()\n  }\n};\n\nlp.parseExpression = function(noIn) {\n  var start = this.storeCurrentPos();\n  var expr = this.parseMaybeAssign(noIn);\n  if (this.tok.type === tokTypes.comma) {\n    var node = this.startNodeAt(start);\n    node.expressions = [expr];\n    while (this.eat(tokTypes.comma)) { node.expressions.push(this.parseMaybeAssign(noIn)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\nlp.parseParenExpression = function() {\n  this.pushCx();\n  this.expect(tokTypes.parenL);\n  var val = this.parseExpression();\n  this.popCx();\n  this.expect(tokTypes.parenR);\n  return val\n};\n\nlp.parseMaybeAssign = function(noIn) {\n  // `yield` should be an identifier reference if it's not in generator functions.\n  if (this.inGenerator && this.toks.isContextual(\"yield\")) {\n    var node = this.startNode();\n    this.next();\n    if (this.semicolon() || this.canInsertSemicolon() || (this.tok.type !== tokTypes.star && !this.tok.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(tokTypes.star);\n      node.argument = this.parseMaybeAssign();\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  }\n\n  var start = this.storeCurrentPos();\n  var left = this.parseMaybeConditional(noIn);\n  if (this.tok.type.isAssign) {\n    var node$1 = this.startNodeAt(start);\n    node$1.operator = this.tok.value;\n    node$1.left = this.tok.type === tokTypes.eq ? this.toAssignable(left) : this.checkLVal(left);\n    this.next();\n    node$1.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node$1, \"AssignmentExpression\")\n  }\n  return left\n};\n\nlp.parseMaybeConditional = function(noIn) {\n  var start = this.storeCurrentPos();\n  var expr = this.parseExprOps(noIn);\n  if (this.eat(tokTypes.question)) {\n    var node = this.startNodeAt(start);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    node.alternate = this.expect(tokTypes.colon) ? this.parseMaybeAssign(noIn) : this.dummyIdent();\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\nlp.parseExprOps = function(noIn) {\n  var start = this.storeCurrentPos();\n  var indent = this.curIndent, line = this.curLineStart;\n  return this.parseExprOp(this.parseMaybeUnary(false), start, -1, noIn, indent, line)\n};\n\nlp.parseExprOp = function(left, start, minPrec, noIn, indent, line) {\n  if (this.curLineStart !== line && this.curIndent < indent && this.tokenStartsLine()) { return left }\n  var prec = this.tok.type.binop;\n  if (prec != null && (!noIn || this.tok.type !== tokTypes._in)) {\n    if (prec > minPrec) {\n      var node = this.startNodeAt(start);\n      node.left = left;\n      node.operator = this.tok.value;\n      this.next();\n      if (this.curLineStart !== line && this.curIndent < indent && this.tokenStartsLine()) {\n        node.right = this.dummyIdent();\n      } else {\n        var rightStart = this.storeCurrentPos();\n        node.right = this.parseExprOp(this.parseMaybeUnary(false), rightStart, prec, noIn, indent, line);\n      }\n      this.finishNode(node, /&&|\\|\\||\\?\\?/.test(node.operator) ? \"LogicalExpression\" : \"BinaryExpression\");\n      return this.parseExprOp(node, start, minPrec, noIn, indent, line)\n    }\n  }\n  return left\n};\n\nlp.parseMaybeUnary = function(sawUnary) {\n  var start = this.storeCurrentPos(), expr;\n  if (this.options.ecmaVersion >= 8 && this.toks.isContextual(\"await\") &&\n      (this.inAsync || (this.toks.inModule && this.options.ecmaVersion >= 13) ||\n       (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.tok.type.prefix) {\n    var node = this.startNode(), update = this.tok.type === tokTypes.incDec;\n    if (!update) { sawUnary = true; }\n    node.operator = this.tok.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(true);\n    if (update) { node.argument = this.checkLVal(node.argument); }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (this.tok.type === tokTypes.ellipsis) {\n    var node$1 = this.startNode();\n    this.next();\n    node$1.argument = this.parseMaybeUnary(sawUnary);\n    expr = this.finishNode(node$1, \"SpreadElement\");\n  } else if (!sawUnary && this.tok.type === tokTypes.privateId) {\n    expr = this.parsePrivateIdent();\n  } else {\n    expr = this.parseExprSubscripts();\n    while (this.tok.type.postfix && !this.canInsertSemicolon()) {\n      var node$2 = this.startNodeAt(start);\n      node$2.operator = this.tok.value;\n      node$2.prefix = false;\n      node$2.argument = this.checkLVal(expr);\n      this.next();\n      expr = this.finishNode(node$2, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(tokTypes.starstar)) {\n    var node$3 = this.startNodeAt(start);\n    node$3.operator = \"**\";\n    node$3.left = expr;\n    node$3.right = this.parseMaybeUnary(false);\n    return this.finishNode(node$3, \"BinaryExpression\")\n  }\n\n  return expr\n};\n\nlp.parseExprSubscripts = function() {\n  var start = this.storeCurrentPos();\n  return this.parseSubscripts(this.parseExprAtom(), start, false, this.curIndent, this.curLineStart)\n};\n\nlp.parseSubscripts = function(base, start, noCalls, startIndent, line) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optionalChained = false;\n  for (;;) {\n    if (this.curLineStart !== line && this.curIndent <= startIndent && this.tokenStartsLine()) {\n      if (this.tok.type === tokTypes.dot && this.curIndent === startIndent)\n        { --startIndent; }\n      else\n        { break }\n    }\n\n    var maybeAsyncArrow = base.type === \"Identifier\" && base.name === \"async\" && !this.canInsertSemicolon();\n    var optional = optionalSupported && this.eat(tokTypes.questionDot);\n    if (optional) {\n      optionalChained = true;\n    }\n\n    if ((optional && this.tok.type !== tokTypes.parenL && this.tok.type !== tokTypes.bracketL && this.tok.type !== tokTypes.backQuote) || this.eat(tokTypes.dot)) {\n      var node = this.startNodeAt(start);\n      node.object = base;\n      if (this.curLineStart !== line && this.curIndent <= startIndent && this.tokenStartsLine())\n        { node.property = this.dummyIdent(); }\n      else\n        { node.property = this.parsePropertyAccessor() || this.dummyIdent(); }\n      node.computed = false;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (this.tok.type === tokTypes.bracketL) {\n      this.pushCx();\n      this.next();\n      var node$1 = this.startNodeAt(start);\n      node$1.object = base;\n      node$1.property = this.parseExpression();\n      node$1.computed = true;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      this.popCx();\n      this.expect(tokTypes.bracketR);\n      base = this.finishNode(node$1, \"MemberExpression\");\n    } else if (!noCalls && this.tok.type === tokTypes.parenL) {\n      var exprList = this.parseExprList(tokTypes.parenR);\n      if (maybeAsyncArrow && this.eat(tokTypes.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(start), exprList, true) }\n      var node$2 = this.startNodeAt(start);\n      node$2.callee = base;\n      node$2.arguments = exprList;\n      if (optionalSupported) {\n        node$2.optional = optional;\n      }\n      base = this.finishNode(node$2, \"CallExpression\");\n    } else if (this.tok.type === tokTypes.backQuote) {\n      var node$3 = this.startNodeAt(start);\n      node$3.tag = base;\n      node$3.quasi = this.parseTemplate();\n      base = this.finishNode(node$3, \"TaggedTemplateExpression\");\n    } else {\n      break\n    }\n  }\n\n  if (optionalChained) {\n    var chainNode = this.startNodeAt(start);\n    chainNode.expression = base;\n    base = this.finishNode(chainNode, \"ChainExpression\");\n  }\n  return base\n};\n\nlp.parseExprAtom = function() {\n  var node;\n  switch (this.tok.type) {\n  case tokTypes._this:\n  case tokTypes._super:\n    var type = this.tok.type === tokTypes._this ? \"ThisExpression\" : \"Super\";\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, type)\n\n  case tokTypes.name:\n    var start = this.storeCurrentPos();\n    var id = this.parseIdent();\n    var isAsync = false;\n    if (id.name === \"async\" && !this.canInsertSemicolon()) {\n      if (this.eat(tokTypes._function)) {\n        this.toks.overrideContext(tokContexts.f_expr);\n        return this.parseFunction(this.startNodeAt(start), false, true)\n      }\n      if (this.tok.type === tokTypes.name) {\n        id = this.parseIdent();\n        isAsync = true;\n      }\n    }\n    return this.eat(tokTypes.arrow) ? this.parseArrowExpression(this.startNodeAt(start), [id], isAsync) : id\n\n  case tokTypes.regexp:\n    node = this.startNode();\n    var val = this.tok.value;\n    node.regex = {pattern: val.pattern, flags: val.flags};\n    node.value = val.value;\n    node.raw = this.input.slice(this.tok.start, this.tok.end);\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.num: case tokTypes.string:\n    node = this.startNode();\n    node.value = this.tok.value;\n    node.raw = this.input.slice(this.tok.start, this.tok.end);\n    if (this.tok.type === tokTypes.num && node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes._null: case tokTypes._true: case tokTypes._false:\n    node = this.startNode();\n    node.value = this.tok.type === tokTypes._null ? null : this.tok.type === tokTypes._true;\n    node.raw = this.tok.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case tokTypes.parenL:\n    var parenStart = this.storeCurrentPos();\n    this.next();\n    var inner = this.parseExpression();\n    this.expect(tokTypes.parenR);\n    if (this.eat(tokTypes.arrow)) {\n      // (a,)=>a // SequenceExpression makes dummy in the last hole. Drop the dummy.\n      var params = inner.expressions || [inner];\n      if (params.length && isDummy(params[params.length - 1]))\n        { params.pop(); }\n      return this.parseArrowExpression(this.startNodeAt(parenStart), params)\n    }\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(parenStart);\n      par.expression = inner;\n      inner = this.finishNode(par, \"ParenthesizedExpression\");\n    }\n    return inner\n\n  case tokTypes.bracketL:\n    node = this.startNode();\n    node.elements = this.parseExprList(tokTypes.bracketR, true);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case tokTypes.braceL:\n    this.toks.overrideContext(tokContexts.b_expr);\n    return this.parseObj()\n\n  case tokTypes._class:\n    return this.parseClass(false)\n\n  case tokTypes._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case tokTypes._new:\n    return this.parseNew()\n\n  case tokTypes.backQuote:\n    return this.parseTemplate()\n\n  case tokTypes._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.dummyIdent()\n    }\n\n  default:\n    return this.dummyIdent()\n  }\n};\n\nlp.parseExprImport = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  switch (this.tok.type) {\n  case tokTypes.parenL:\n    return this.parseDynamicImport(node)\n  case tokTypes.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    node.name = \"import\";\n    return this.finishNode(node, \"Identifier\")\n  }\n};\n\nlp.parseDynamicImport = function(node) {\n  node.source = this.parseExprList(tokTypes.parenR)[0] || this.dummyString();\n  return this.finishNode(node, \"ImportExpression\")\n};\n\nlp.parseImportMeta = function(node) {\n  this.next(); // skip '.'\n  node.property = this.parseIdent(true);\n  return this.finishNode(node, \"MetaProperty\")\n};\n\nlp.parseNew = function() {\n  var node = this.startNode(), startIndent = this.curIndent, line = this.curLineStart;\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(tokTypes.dot)) {\n    node.meta = meta;\n    node.property = this.parseIdent(true);\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var start = this.storeCurrentPos();\n  node.callee = this.parseSubscripts(this.parseExprAtom(), start, true, startIndent, line);\n  if (this.tok.type === tokTypes.parenL) {\n    node.arguments = this.parseExprList(tokTypes.parenR);\n  } else {\n    node.arguments = [];\n  }\n  return this.finishNode(node, \"NewExpression\")\n};\n\nlp.parseTemplateElement = function() {\n  var elem = this.startNode();\n\n  // The loose parser accepts invalid unicode escapes even in untagged templates.\n  if (this.tok.type === tokTypes.invalidTemplate) {\n    elem.value = {\n      raw: this.tok.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.tok.start, this.tok.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.tok.value\n    };\n  }\n  this.next();\n  elem.tail = this.tok.type === tokTypes.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\nlp.parseTemplate = function() {\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement();\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this.next();\n    node.expressions.push(this.parseExpression());\n    if (this.expect(tokTypes.braceR)) {\n      curElt = this.parseTemplateElement();\n    } else {\n      curElt = this.startNode();\n      curElt.value = {cooked: \"\", raw: \"\"};\n      curElt.tail = true;\n      this.finishNode(curElt, \"TemplateElement\");\n    }\n    node.quasis.push(curElt);\n  }\n  this.expect(tokTypes.backQuote);\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\nlp.parseObj = function() {\n  var node = this.startNode();\n  node.properties = [];\n  this.pushCx();\n  var indent = this.curIndent + 1, line = this.curLineStart;\n  this.eat(tokTypes.braceL);\n  if (this.curIndent + 1 < indent) { indent = this.curIndent; line = this.curLineStart; }\n  while (!this.closes(tokTypes.braceR, indent, line)) {\n    var prop = this.startNode(), isGenerator = (void 0), isAsync = (void 0), start = (void 0);\n    if (this.options.ecmaVersion >= 9 && this.eat(tokTypes.ellipsis)) {\n      prop.argument = this.parseMaybeAssign();\n      node.properties.push(this.finishNode(prop, \"SpreadElement\"));\n      this.eat(tokTypes.comma);\n      continue\n    }\n    if (this.options.ecmaVersion >= 6) {\n      start = this.storeCurrentPos();\n      prop.method = false;\n      prop.shorthand = false;\n      isGenerator = this.eat(tokTypes.star);\n    }\n    this.parsePropertyName(prop);\n    if (this.toks.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(tokTypes.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    if (isDummy(prop.key)) { if (isDummy(this.parseMaybeAssign())) { this.next(); } this.eat(tokTypes.comma); continue }\n    if (this.eat(tokTypes.colon)) {\n      prop.kind = \"init\";\n      prop.value = this.parseMaybeAssign();\n    } else if (this.options.ecmaVersion >= 6 && (this.tok.type === tokTypes.parenL || this.tok.type === tokTypes.braceL)) {\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (this.options.ecmaVersion >= 5 && prop.key.type === \"Identifier\" &&\n               !prop.computed && (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.tok.type !== tokTypes.comma && this.tok.type !== tokTypes.braceR && this.tok.type !== tokTypes.eq)) {\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n    } else {\n      prop.kind = \"init\";\n      if (this.options.ecmaVersion >= 6) {\n        if (this.eat(tokTypes.eq)) {\n          var assign = this.startNodeAt(start);\n          assign.operator = \"=\";\n          assign.left = prop.key;\n          assign.right = this.parseMaybeAssign();\n          prop.value = this.finishNode(assign, \"AssignmentExpression\");\n        } else {\n          prop.value = prop.key;\n        }\n      } else {\n        prop.value = this.dummyIdent();\n      }\n      prop.shorthand = true;\n    }\n    node.properties.push(this.finishNode(prop, \"Property\"));\n    this.eat(tokTypes.comma);\n  }\n  this.popCx();\n  if (!this.eat(tokTypes.braceR)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  return this.finishNode(node, \"ObjectExpression\")\n};\n\nlp.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(tokTypes.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseExpression();\n      this.expect(tokTypes.bracketR);\n      return\n    } else {\n      prop.computed = false;\n    }\n  }\n  var key = (this.tok.type === tokTypes.num || this.tok.type === tokTypes.string) ? this.parseExprAtom() : this.parseIdent();\n  prop.key = key || this.dummyIdent();\n};\n\nlp.parsePropertyAccessor = function() {\n  if (this.tok.type === tokTypes.name || this.tok.type.keyword) { return this.parseIdent() }\n  if (this.tok.type === tokTypes.privateId) { return this.parsePrivateIdent() }\n};\n\nlp.parseIdent = function() {\n  var name = this.tok.type === tokTypes.name ? this.tok.value : this.tok.type.keyword;\n  if (!name) { return this.dummyIdent() }\n  if (this.tok.type.keyword) { this.toks.type = tokTypes.name; }\n  var node = this.startNode();\n  this.next();\n  node.name = name;\n  return this.finishNode(node, \"Identifier\")\n};\n\nlp.parsePrivateIdent = function() {\n  var node = this.startNode();\n  node.name = this.tok.value;\n  this.next();\n  return this.finishNode(node, \"PrivateIdentifier\")\n};\n\nlp.initFunction = function(node) {\n  node.id = null;\n  node.params = [];\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\nlp.toAssignable = function(node, binding) {\n  if (!node || node.type === \"Identifier\" || (node.type === \"MemberExpression\" && !binding)) ; else if (node.type === \"ParenthesizedExpression\") {\n    this.toAssignable(node.expression, binding);\n  } else if (this.options.ecmaVersion < 6) {\n    return this.dummyIdent()\n  } else if (node.type === \"ObjectExpression\") {\n    node.type = \"ObjectPattern\";\n    for (var i = 0, list = node.properties; i < list.length; i += 1)\n      {\n      var prop = list[i];\n\n      this.toAssignable(prop, binding);\n    }\n  } else if (node.type === \"ArrayExpression\") {\n    node.type = \"ArrayPattern\";\n    this.toAssignableList(node.elements, binding);\n  } else if (node.type === \"Property\") {\n    this.toAssignable(node.value, binding);\n  } else if (node.type === \"SpreadElement\") {\n    node.type = \"RestElement\";\n    this.toAssignable(node.argument, binding);\n  } else if (node.type === \"AssignmentExpression\") {\n    node.type = \"AssignmentPattern\";\n    delete node.operator;\n  } else {\n    return this.dummyIdent()\n  }\n  return node\n};\n\nlp.toAssignableList = function(exprList, binding) {\n  for (var i = 0, list = exprList; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    this.toAssignable(expr, binding);\n  }\n  return exprList\n};\n\nlp.parseFunctionParams = function(params) {\n  params = this.parseExprList(tokTypes.parenR);\n  return this.toAssignableList(params, true)\n};\n\nlp.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInAsync = this.inAsync, oldInGenerator = this.inGenerator, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = !!isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n  this.inAsync = node.async;\n  this.inGenerator = node.generator;\n  this.inFunction = true;\n  node.params = this.parseFunctionParams();\n  node.body = this.parseBlock();\n  this.toks.adaptDirectivePrologue(node.body.body);\n  this.inAsync = oldInAsync;\n  this.inGenerator = oldInGenerator;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\nlp.parseArrowExpression = function(node, params, isAsync) {\n  var oldInAsync = this.inAsync, oldInGenerator = this.inGenerator, oldInFunction = this.inFunction;\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n  this.inAsync = node.async;\n  this.inGenerator = false;\n  this.inFunction = true;\n  node.params = this.toAssignableList(params, true);\n  node.expression = this.tok.type !== tokTypes.braceL;\n  if (node.expression) {\n    node.body = this.parseMaybeAssign();\n  } else {\n    node.body = this.parseBlock();\n    this.toks.adaptDirectivePrologue(node.body.body);\n  }\n  this.inAsync = oldInAsync;\n  this.inGenerator = oldInGenerator;\n  this.inFunction = oldInFunction;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\nlp.parseExprList = function(close, allowEmpty) {\n  this.pushCx();\n  var indent = this.curIndent, line = this.curLineStart, elts = [];\n  this.next(); // Opening bracket\n  while (!this.closes(close, indent + 1, line)) {\n    if (this.eat(tokTypes.comma)) {\n      elts.push(allowEmpty ? null : this.dummyIdent());\n      continue\n    }\n    var elt = this.parseMaybeAssign();\n    if (isDummy(elt)) {\n      if (this.closes(close, indent, line)) { break }\n      this.next();\n    } else {\n      elts.push(elt);\n    }\n    this.eat(tokTypes.comma);\n  }\n  this.popCx();\n  if (!this.eat(close)) {\n    // If there is no closing brace, make the node span to the start\n    // of the next token (this is useful for Tern)\n    this.last.end = this.tok.start;\n    if (this.options.locations) { this.last.loc.end = this.tok.loc.start; }\n  }\n  return elts\n};\n\nlp.parseAwait = function() {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary();\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\n// Acorn: Loose parser\n//\n// This module provides an alternative parser that exposes that same\n// interface as the main module's `parse` function, but will try to\n// parse anything as JavaScript, repairing syntax error the best it\n// can. There are circumstances in which it will raise an error and\n// give up, but they are very rare. The resulting AST will be a mostly\n// valid JavaScript AST (as per the [Mozilla parser API][api], except\n// that:\n//\n// - Return outside functions is allowed\n//\n// - Label consistency (no conflicts, break only to existing labels)\n//   is not enforced.\n//\n// - Bogus Identifier nodes with a name of `\"\u2716\"` are inserted whenever\n//   the parser got too confused to return anything meaningful.\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n//\n// The expected use for this is to *first* try `acorn.parse`, and only\n// if that fails switch to the loose parser. The loose parser might\n// parse badly indented code incorrectly, so **don't** use it as your\n// default parser.\n//\n// Quite a lot of acorn.js is duplicated here. The alternative was to\n// add a *lot* of extra cruft to that file, making it less readable\n// and slower. Copying and editing the code allowed me to make\n// invasive changes and simplifications without creating a complicated\n// tangle.\n\n\ndefaultOptions.tabSize = 4;\n\nfunction parse(input, options) {\n  return LooseParser.parse(input, options)\n}\n\nexport { LooseParser, isDummy, parse };\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `\u2423\u2423`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "/**\n * @typedef { import('estree').Node} Node\n * @typedef {{\n *   skip: () => void;\n *   remove: () => void;\n *   replace: (node: Node) => void;\n * }} WalkerContext\n */\n\nexport class WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t * @param {Node} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent && prop) {\n\t\t\tif (index != null) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop])[index] = node;\n\t\t\t} else {\n\t\t\t\t/** @type {Node} */ (parent[prop]) = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Parent | null | undefined} parent\n\t * @param {keyof Parent | null | undefined} prop\n\t * @param {number | null | undefined} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent && prop) {\n\t\t\tif (index !== null && index !== undefined) {\n\t\t\t\t/** @type {Array<Node>} */ (parent[prop]).splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n", "import { WalkerBase } from './walker.js';\n\n/**\n * @typedef { import('estree').Node} Node\n * @typedef { import('./walker.js').WalkerContext} WalkerContext\n * @typedef {(\n *    this: WalkerContext,\n *    node: Node,\n *    parent: Node | null,\n *    key: string | number | symbol | null | undefined,\n *    index: number | null | undefined\n * ) => void} SyncHandler\n */\n\nexport class SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} [enter]\n\t * @param {SyncHandler} [leave]\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {Node | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler | undefined} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t * @template {Node} Parent\n\t * @param {Node} node\n\t * @param {Parent | null} parent\n\t * @param {keyof Parent} [prop]\n\t * @param {number | null} [index]\n\t * @returns {Node | null}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\t/** @type {keyof Node} */\n\t\t\tlet key;\n\n\t\t\tfor (key in node) {\n\t\t\t\t/** @type {unknown} */\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (value && typeof value === 'object') {\n\t\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\t\tconst nodes = /** @type {Array<unknown>} */ (value);\n\t\t\t\t\t\tfor (let i = 0; i < nodes.length; i += 1) {\n\t\t\t\t\t\t\tconst item = nodes[i];\n\t\t\t\t\t\t\tif (isNode(item)) {\n\t\t\t\t\t\t\t\tif (!this.visit(item, node, key, i)) {\n\t\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (isNode(value)) {\n\t\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n/**\n * Ducktype a node.\n *\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n\treturn (\n\t\tvalue !== null && typeof value === 'object' && 'type' in value && typeof value.type === 'string'\n\t);\n}\n", "import { SyncWalker } from './sync.js';\nimport { AsyncWalker } from './async.js';\n\n/**\n * @typedef {import('estree').Node} Node\n * @typedef {import('./sync.js').SyncHandler} SyncHandler\n * @typedef {import('./async.js').AsyncHandler} AsyncHandler\n */\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {Node | null}\n */\nexport function walk(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {Node} ast\n * @param {{\n *   enter?: AsyncHandler\n *   leave?: AsyncHandler\n * }} walker\n * @returns {Promise<Node | null>}\n */\nexport async function asyncWalk(ast, { enter, leave }) {\n\tconst instance = new AsyncWalker(enter, leave);\n\treturn await instance.visit(ast, null);\n}\n", "import { rewriteURL } from \"./url\";\r\nimport { parse, Options } from \"acorn\";\r\nimport { parse as parseLoose } from \"acorn-loose\";\r\nimport { generate } from \"astring\";\r\nimport { BaseCallExpression, CallExpression, Node } from \"estree\";\r\nimport { walk } from \"estree-walker\";\r\n\r\nconst GLOBAL_VARS = [\r\n  \"location\",\r\n  \"window\",\r\n  \"top\",\r\n  \"parent\",\r\n  \"opener\",\r\n  \"document\",\r\n  \"eval\",\r\n  \"self\",\r\n  \"this\",\r\n  \"globalThis\",\r\n  \"localStorage\",\r\n  \"sessionStorage\",\r\n  \"postMessage\"\r\n];\r\n\r\nexport function rewriteJS(js: string, meta: string | URL): string {\r\n  // error-tolerant parsing configuration\r\n  const acornConfig: Options = {\r\n    sourceType: \"module\",\r\n    allowImportExportEverywhere: true,\r\n    allowAwaitOutsideFunction: true,\r\n    allowReturnOutsideFunction: true,\r\n    allowSuperOutsideMethod: true,\r\n    checkPrivateFields: false,\r\n    locations: false,\r\n    ranges: false,\r\n    ecmaVersion: \"latest\",\r\n    preserveParens: false,\r\n    allowReserved: true\r\n  };\r\n\r\n  let ast: Node;\r\n  try {\r\n    ast = parse(js, acornConfig) as Node;\r\n  } catch (e) {\r\n    __$ampere.logger.warn(\"Failed to parse JS\", e);\r\n    ast = parseLoose(js, acornConfig) as Node;\r\n  }\r\n\r\n  walk(ast, {\r\n    leave(node, parent, prop) {\r\n      if (node.type === \"ImportDeclaration\") {\r\n        // rewrite static imports now\r\n        if (typeof node.source.value === \"string\") {\r\n          node.source.value = rewriteURL(node.source.value, meta);\r\n        }\r\n      } else if (node.type === \"ImportExpression\") {\r\n        // rewrite dynamic imports during runtime\r\n        node.source = createScopedExpression(\r\n          [\r\n            node.source,\r\n            { type: \"Literal\", value: `globalThis.__$ampere.base` }\r\n          ],\r\n          \"rewriteURL\"\r\n        );\r\n      } else if (node.type === \"Identifier\") {\r\n        // rewrite global variables\r\n        if (\r\n          GLOBAL_VARS.includes(node.name) &&\r\n          ![\r\n            \"FunctionDeclaration\",\r\n            \"LabeledStatement\",\r\n            \"CatchClause\",\r\n            \"VariableDeclarator\",\r\n            \"ExpressionStatement\",\r\n            \"Property\",\r\n            \"SequenceExpression\",\r\n            \"ClassDeclaration\",\r\n            \"ForInStatement\",\r\n            \"ForOfStatement\",\r\n            \"ForStatement\",\r\n            \"MethodDefinition\"\r\n          ].includes(parent?.type as string)\r\n        ) {\r\n          // Preserve global variables in object definitions and left hand assignments\r\n          if (parent?.type === \"MemberExpression\" && prop !== \"object\") return;\r\n          if (parent?.type === \"AssignmentExpression\" && prop !== \"right\")\r\n            return;\r\n          if (parent?.type === \"ArrowFunctionExpression\" && prop !== \"body\")\r\n            return;\r\n\r\n          this.replace(createScopedExpression([node]));\r\n        }\r\n      } else if (node.type === \"Property\") {\r\n        if (\r\n          node.value.type === \"Identifier\" &&\r\n          GLOBAL_VARS.includes(node.value.name)\r\n        ) {\r\n          // Rewrite object definitions with global variables as key shorthands\r\n          node.shorthand = false;\r\n\r\n          // Rewrite object definitions with global variables as values\r\n          node.value = createScopedExpression([node.value]);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return generate(ast);\r\n}\r\n\r\nfunction createScopedExpression(\r\n  args: BaseCallExpression[\"arguments\"],\r\n  name: string = \"scope\"\r\n): CallExpression {\r\n  return {\r\n    type: \"CallExpression\",\r\n    callee: {\r\n      type: \"Identifier\",\r\n      name: `globalThis.__$ampere.${name}`\r\n    },\r\n    arguments: args,\r\n    optional: false\r\n  };\r\n}\r\n", "import { rewriteURL } from \"./url\";\r\n\r\nexport function rewriteSrcSet(srcset: string, meta: string | URL): string {\r\n  return srcset\r\n    .split(\",\")\r\n    .map((src) => {\r\n      const [url, ...rest] = src.trim().split(\" \");\r\n      return rewriteURL(url, meta) + \" \" + rest.join(\" \");\r\n    })\r\n    .join(\",\");\r\n}\r\n", "/**\n * Sets the given attribute on the specified node\n * @param {Element} node Node to set attribute on\n * @param {string} name Name of the attribute to set\n * @param {string} value Value of the attribute\n * @return {void}\n */\nexport function setAttribute(node, name, value) {\n    removeAttribute(node, name);\n    node.attrs.push({\n        name,\n        value\n    });\n}\n/**\n * Gets an attribute from a given node\n * @param {Element} node Node to retrieve attribute from\n * @param {string} name Name of the attribute to get\n * @return {string|null}\n */\nexport function getAttribute(node, name) {\n    return node.attrs.find((attr) => attr.name === name)?.value ?? null;\n}\n/**\n * Determines if the node has the specified attribute\n * @param {Element} node Node to test\n * @param {string} name Attribute to look for\n * @return {boolean}\n */\nexport function hasAttribute(node, name) {\n    return node.attrs.some((attr) => attr.name === name);\n}\n/**\n * Removes an attribute from a given node\n * @param {Element} node Node to retrieve attribute from\n * @param {string} name Name of the attribute to remove\n * @return {void}\n */\nexport function removeAttribute(node, name) {\n    const index = getAttributeIndex(node, name);\n    if (index > -1) {\n        node.attrs.splice(index, 1);\n    }\n}\n/**\n * Gets the index of an attribute from a given node\n * @param {Element} node Node to retrieve attribute from\n * @param {string} name Name of the attribute to retrieve index of\n * @return {number}\n */\nexport function getAttributeIndex(node, name) {\n    return node.attrs.findIndex((attr) => attr.name === name);\n}\n", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", null, null, null, null, "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", null, "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "import { defaultTreeAdapter, html } from 'parse5';\nconst namespaceMap = {\n    HTML: html.NS.HTML,\n    XML: html.NS.XML,\n    MATHML: html.NS.MATHML,\n    SVG: html.NS.SVG,\n    XLINK: html.NS.XLINK,\n    XMLNS: html.NS.XMLNS\n};\n/**\n * Creates an element node\n * @param {string} tagName Name of the tag to create\n * @param {Record<string, string>|Attribute[]} attrs Attributes for the element\n * @param {NS} namespaceURI Namespace of the element\n * @return {Element}\n */\nexport function createElement(tagName, attrs = [], namespaceURI = html.NS.HTML) {\n    const normalisedAttrs = [];\n    const normalisedNamespace = namespaceMap[namespaceURI.toUpperCase()] ?? namespaceURI;\n    if (Array.isArray(attrs)) {\n        for (const attr of attrs) {\n            normalisedAttrs.push(attr);\n        }\n    }\n    else {\n        for (const name in attrs) {\n            if (Object.prototype.hasOwnProperty.call(attrs, name)) {\n                normalisedAttrs.push({\n                    name,\n                    value: attrs[name]\n                });\n            }\n        }\n    }\n    return defaultTreeAdapter.createElement(tagName, normalisedNamespace, normalisedAttrs);\n}\n/**\n * Creates a text node\n * @param {string} value Text contents of the new node\n * @return {TextNode}\n */\nexport function createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null\n    };\n}\n/**\n * Creates a document fragment\n * @return {DocumentFragment}\n */\nexport function createDocumentFragment() {\n    return defaultTreeAdapter.createDocumentFragment();\n}\n/**\n * Creates a template element\n * @param {DocumentFragment=} content Content of the template, if any\n * @return {Template}\n */\nexport function createTemplateNode(content) {\n    return {\n        nodeName: 'template',\n        tagName: 'template',\n        content: content ?? createDocumentFragment(),\n        parentNode: null,\n        attrs: [],\n        namespaceURI: html.NS.HTML,\n        childNodes: []\n    };\n}\n/**\n * Creates a document\n * @return {Document}\n */\nexport function createDocument() {\n    return defaultTreeAdapter.createDocument();\n}\n/**\n * Creates a comment node\n * @param {string} data Contents of the comment\n * @return {CommentNode}\n */\nexport function createCommentNode(data) {\n    return defaultTreeAdapter.createCommentNode(data);\n}\n", "import { defaultTreeAdapter } from 'parse5';\n/**\n * Determines if a given node is a document or not\n * @param {Node} node Node to test\n * @return {boolean}\n */\nexport function isDocument(node) {\n    return node.nodeName === '#document';\n}\n/**\n * Determines if a given node is a document fragment or not\n * @param {Node} node Node to test\n * @return {boolean}\n */\nexport function isDocumentFragment(node) {\n    return node.nodeName === '#document-fragment';\n}\n/**\n * Determines if a given node is a template node or not\n * @param {Node} node Node to test\n * @return {boolean}\n */\nexport function isTemplateNode(node) {\n    return node.nodeName === 'template';\n}\nexport const isElementNode = defaultTreeAdapter.isElementNode;\nexport const isCommentNode = defaultTreeAdapter.isCommentNode;\nexport const isDocumentTypeNode = defaultTreeAdapter.isDocumentTypeNode;\nexport const isTextNode = defaultTreeAdapter.isTextNode;\n/**\n * Determines if a given node is a parent or not\n * @param {Node} node Node to test\n * @return {boolean}\n */\nexport function isParentNode(node) {\n    return (isDocument(node) ||\n        isDocumentFragment(node) ||\n        isElementNode(node) ||\n        isTemplateNode(node));\n}\n/**\n * Determines if a given node is a child or not\n * @param {Node} node Node to test\n * @return {boolean}\n */\nexport function isChildNode(node) {\n    return (isElementNode(node) ||\n        isTemplateNode(node) ||\n        isCommentNode(node) ||\n        isTextNode(node) ||\n        isDocumentTypeNode(node));\n}\n", "import { isParentNode, isChildNode } from './typeGuards.js';\n/**\n * Queries the AST for a node which satifies the given condition\n * @param {Node} root Root node to traverse from\n * @param {Function} condition Function to determine if the node matches or not\n * @return {Node|null}\n */\nexport function query(root, condition) {\n    for (const child of queryAll(root, condition)) {\n        return child;\n    }\n    return null;\n}\n/**\n * Walks the tree of a node depth-first and yields each discovered node\n * @param {Node} node Node to traverse from\n */\nexport function* walkChildren(node) {\n    if (isParentNode(node)) {\n        for (const child of node.childNodes) {\n            yield child;\n            yield* walkChildren(child);\n        }\n    }\n}\n/**\n * Queries the AST for nodes which satifies the given condition\n * @param {Node} root Root node to traverse from\n * @param {Function} condition Function to determine if a node matches or not\n */\nexport function* queryAll(root, condition) {\n    for (const child of walkChildren(root)) {\n        if (!condition || condition(child)) {\n            // This cast is here to make `querySelector<Element>` and such possible.\n            // If there's no condition, the node really should be `Node` but\n            // sometimes humans might know what they're doing.\n            yield child;\n        }\n    }\n}\n/**\n * Computes the ancestors of a given node\n * @param {Node} node Node to traverse from\n */\nexport function* ancestors(node) {\n    let current = node;\n    while (current !== null) {\n        yield current;\n        if (isChildNode(current)) {\n            current = current.parentNode;\n        }\n        else {\n            current = null;\n        }\n    }\n}\n/**\n * Computes the previous siblings of a given node\n * @param {Node} node Node to traverse from\n */\nexport function* previousSiblings(node) {\n    if (!isChildNode(node) || !node.parentNode) {\n        return;\n    }\n    const children = node.parentNode.childNodes;\n    const index = children.indexOf(node);\n    for (let i = index - 1; i >= 0; i--) {\n        yield children[i];\n    }\n}\n/**\n * Computes the next siblings of a given node\n * @param {Node} node Node to traverse from\n */\nexport function* nextSiblings(node) {\n    if (!isChildNode(node) || !node.parentNode) {\n        return;\n    }\n    const children = node.parentNode.childNodes;\n    const index = children.indexOf(node);\n    for (let i = index + 1; i < children.length; i++) {\n        yield children[i];\n    }\n}\n", "import { defaultTreeAdapter } from 'parse5';\nimport { isChildNode, isParentNode } from './typeGuards.js';\n/**\n * Attempts to remove the given node from the AST\n * @param {Node} node Node to remove\n * @return {void}\n */\nexport function removeNode(node) {\n    if (!isChildNode(node)) {\n        // Must already be detached, or someone made an absurd AST\n        return;\n    }\n    defaultTreeAdapter.detachNode(node);\n}\nexport const appendChild = defaultTreeAdapter.appendChild;\n/**\n * Performs a splice on the children of the given node\n * @param {Node} node Node to splice children of\n * @param {number} start Index to begin removing nodes from\n * @param {number} deleteCount Number of nodes to delete\n * @param {...ChildNode} children Children to add\n * @return {void}\n */\nexport function spliceChildren(node, start, deleteCount, ...children) {\n    if (isParentNode(node)) {\n        return node.childNodes.splice(start, deleteCount, ...children);\n    }\n    return [];\n}\n/**\n * Replaces the given node with a set of nodes\n * @param {ChildNode} node Node to be replaced\n * @param {...ChildNode} replacements Nodes to be used as replacements\n * @return {void}\n */\nexport function replaceWith(node, ...replacements) {\n    if (node.parentNode) {\n        const parentNode = node.parentNode;\n        const index = parentNode.childNodes.indexOf(node);\n        if (index > -1) {\n            spliceChildren(parentNode, parentNode.childNodes.indexOf(node), 1, ...replacements);\n            for (const replacement of replacements) {\n                replacement.parentNode = parentNode;\n            }\n        }\n        node.parentNode = null;\n    }\n}\n", "import { isCommentNode, isTextNode, isParentNode } from './typeGuards.js';\nimport { createTextNode } from './creation.js';\nimport { queryAll } from './traversal.js';\nimport { appendChild } from './treeMutation.js';\n/**\n * Computes the text content of a given node using a similar\n * algorithm to that of `textContent` in the browser\n * @param {Node} node Node to compute text of\n * @return {string}\n */\nexport function getTextContent(node) {\n    if (isCommentNode(node)) {\n        return node.data;\n    }\n    if (isTextNode(node)) {\n        return node.value;\n    }\n    let content = '';\n    const children = queryAll(node, (node) => isTextNode(node));\n    for (const child of children) {\n        content += getTextContent(child);\n    }\n    return content;\n}\n/**\n * Sets the text content of the given node\n * @param {Node} node Node to set contents of\n * @param {string} text Text to use as contents\n * @return {void}\n */\nexport function setTextContent(node, text) {\n    if (isCommentNode(node)) {\n        node.data = text;\n    }\n    else if (isTextNode(node)) {\n        node.value = text;\n    }\n    else if (isParentNode(node)) {\n        node.childNodes = [];\n        appendChild(node, createTextNode(text));\n    }\n}\n", "import { isParentNode, isDocument, isElementNode, isTemplateNode, isCommentNode, isTextNode, isDocumentFragment, isDocumentTypeNode } from './typeGuards.js';\n/**\n * Traverses the tree of a given node\n * @param {Node} node Node to traverse\n * @param {Visitor} visitor Visitor to apply\n * @param {ParentNode=} parent Parent node of the current node\n * @return {void}\n */\nexport function traverse(node, visitor, parent) {\n    const shouldVisitChildren = typeof visitor['pre:node'] !== 'function' ||\n        visitor['pre:node'](node, parent) !== false;\n    if (shouldVisitChildren && isParentNode(node)) {\n        for (const child of node.childNodes) {\n            traverse(child, visitor, node);\n        }\n    }\n    if (typeof visitor.node === 'function') {\n        visitor.node(node, parent);\n    }\n    if (typeof visitor.document === 'function' && isDocument(node)) {\n        visitor.document(node);\n    }\n    if (typeof visitor.documentFragment === 'function' &&\n        isDocumentFragment(node)) {\n        visitor.documentFragment(node, parent);\n    }\n    if (typeof visitor.element === 'function' && isElementNode(node)) {\n        visitor.element(node, parent);\n    }\n    if (typeof visitor.template === 'function' && isTemplateNode(node)) {\n        visitor.template(node, parent);\n    }\n    if (typeof visitor.comment === 'function' && isCommentNode(node)) {\n        visitor.comment(node, parent);\n    }\n    if (typeof visitor.text === 'function' && isTextNode(node)) {\n        visitor.text(node, parent);\n    }\n    if (typeof visitor.documentType === 'function' && isDocumentTypeNode(node)) {\n        visitor.documentType(node, parent);\n    }\n}\n", "import { rewriteCSS } from \"./css\";\r\nimport { rewriteJS } from \"./js\";\r\nimport { rewriteSrcSet } from \"./srcset\";\r\nimport { rewriteURL } from \"./url\";\r\nimport {\r\n  traverse,\r\n  query,\r\n  getAttribute,\r\n  removeAttribute,\r\n  setAttribute,\r\n  getTextContent,\r\n  setTextContent,\r\n  Element,\r\n  hasAttribute\r\n} from \"@parse5/tools\";\r\nimport { parse, serialize } from \"parse5\";\r\nimport { Node } from \"parse5/dist/tree-adapters/default\";\r\n\r\nconst JAVASCRIPT_ELEMENTS = [\"script\"] as const;\r\nconst CSS_ELEMENTS = [\"style\"] as const;\r\n\r\nconst HREF_ELEMENTS = [\"link\", \"a\", \"area\"] as const;\r\nconst SRC_ELEMENTS = [\r\n  \"audio\",\r\n  \"embed\",\r\n  \"iframe\",\r\n  \"img\",\r\n  \"input\",\r\n  \"script\",\r\n  \"source\",\r\n  \"track\",\r\n  \"video\"\r\n] as const;\r\nconst SRCDOC_ELEMENTS = [\"iframe\"] as const;\r\nconst SRCSET_ELEMENTS = [\"img\", \"source\"] as const;\r\nconst ACTION_ELEMENTS = [\"form\"] as const;\r\nconst POSTER_ELEMENTS = [\"video\"] as const;\r\nconst FORMACTION_ELEMENTS = [\"button\"] as const;\r\nconst DATA_ELEMENTS = [\"object\"] as const;\r\nconst BACKGROUND_ELEMENTS = [\"body\"] as const;\r\nconst INTEGRITY_ELEMENTS = [\"link\", \"script\"] as const;\r\nconst NONCE_ELEMENTS = [\"script\", \"style\"] as const;\r\n\r\ndeclare global {\r\n  interface ReadonlyArray<T> {\r\n    includes(searchElement: any, fromIndex?: number): searchElement is T;\r\n  }\r\n}\r\n\r\nexport function rewriteHTML(\r\n  html: string,\r\n  meta: string | URL,\r\n  cookie: string\r\n): string {\r\n  const document = parse(html);\r\n\r\n  const base = query(document, (node) => node.nodeName === \"base\") as Element;\r\n\r\n  if (base) {\r\n    const href = getAttribute(base, \"href\");\r\n\r\n    if (href) {\r\n      meta = new URL(href, meta).toString();\r\n\r\n      setAttribute(base, \"_href\", href);\r\n      removeAttribute(base, \"href\");\r\n    }\r\n  }\r\n\r\n  traverse(document, {\r\n    node(node: Node) {\r\n      // Fix weak native typing of .includes\r\n      if (!(\"attrs\" in node)) return;\r\n\r\n      // Inline scripts\r\n      if (JAVASCRIPT_ELEMENTS.includes(node.nodeName)) {\r\n        const type = getAttribute(node, \"type\");\r\n\r\n        if (\r\n          type &&\r\n          !(\r\n            type.startsWith(\"application/javascript\") ||\r\n            type.startsWith(\"text/javascript\") ||\r\n            type === \"module\"\r\n          )\r\n        )\r\n          return;\r\n\r\n        const content = getTextContent(node);\r\n\r\n        if (content) setTextContent(node, rewriteJS(content, meta));\r\n      }\r\n\r\n      // Inline styles\r\n      if (CSS_ELEMENTS.includes(node.nodeName)) {\r\n        const content = getTextContent(node);\r\n\r\n        if (content) setTextContent(node, rewriteCSS(content, meta));\r\n      }\r\n\r\n      if (hasAttribute(node, \"style\")) {\r\n        const style = getAttribute(node, \"style\");\r\n\r\n        if (style) {\r\n          setAttribute(node, \"style\", rewriteCSS(style, meta));\r\n        }\r\n      }\r\n\r\n      // HREF attributes\r\n      if (HREF_ELEMENTS.includes(node.nodeName)) {\r\n        const href = getAttribute(node, \"href\");\r\n\r\n        if (href) {\r\n          setAttribute(node, \"href\", rewriteURL(href, meta));\r\n        }\r\n      }\r\n\r\n      // SRC attributes\r\n      if (SRC_ELEMENTS.includes(node.nodeName)) {\r\n        const src = getAttribute(node, \"src\");\r\n\r\n        if (src) {\r\n          setAttribute(node, \"src\", rewriteURL(src, meta));\r\n        }\r\n      }\r\n\r\n      // SRCDOC attributes\r\n      if (SRCDOC_ELEMENTS.includes(node.nodeName)) {\r\n        const srcdoc = getAttribute(node, \"srcdoc\");\r\n\r\n        if (srcdoc) {\r\n          setAttribute(node, \"srcdoc\", rewriteHTML(srcdoc, meta, cookie));\r\n        }\r\n      }\r\n\r\n      // SRCSET attributes\r\n      if (SRCSET_ELEMENTS.includes(node.nodeName)) {\r\n        const srcset = getAttribute(node, \"srcset\");\r\n\r\n        if (srcset) {\r\n          setAttribute(node, \"srcset\", rewriteSrcSet(srcset, meta));\r\n        }\r\n      }\r\n\r\n      // ACTION attributes\r\n      if (ACTION_ELEMENTS.includes(node.nodeName)) {\r\n        const action = getAttribute(node, \"action\");\r\n\r\n        if (action) {\r\n          setAttribute(node, \"action\", rewriteURL(action, meta));\r\n        }\r\n      }\r\n\r\n      // POSTER attributes\r\n      if (POSTER_ELEMENTS.includes(node.nodeName)) {\r\n        const poster = getAttribute(node, \"poster\");\r\n\r\n        if (poster) {\r\n          setAttribute(node, \"poster\", rewriteURL(poster, meta));\r\n        }\r\n      }\r\n\r\n      // FORMACTION attributes\r\n      if (FORMACTION_ELEMENTS.includes(node.nodeName)) {\r\n        const formaction = getAttribute(node, \"formaction\");\r\n\r\n        if (formaction) {\r\n          setAttribute(node, \"formaction\", rewriteURL(formaction, meta));\r\n        }\r\n      }\r\n\r\n      // DATA attributes\r\n      if (DATA_ELEMENTS.includes(node.nodeName)) {\r\n        const data = getAttribute(node, \"data\");\r\n\r\n        if (data) {\r\n          setAttribute(node, \"data\", rewriteURL(data, meta));\r\n        }\r\n      }\r\n\r\n      // BACKGROUND attributes\r\n      if (BACKGROUND_ELEMENTS.includes(node.nodeName)) {\r\n        const background = getAttribute(node, \"background\");\r\n\r\n        if (background) {\r\n          setAttribute(node, \"background\", rewriteURL(background, meta));\r\n        }\r\n      }\r\n\r\n      // INTEGRITY attributes\r\n      if (INTEGRITY_ELEMENTS.includes(node.nodeName)) {\r\n        const integrity = getAttribute(node, \"integrity\");\r\n\r\n        if (integrity) {\r\n          setAttribute(node, \"_integrity\", integrity);\r\n          removeAttribute(node, \"integrity\");\r\n        }\r\n      }\r\n\r\n      // NONCE attributes\r\n      if (NONCE_ELEMENTS.includes(node.nodeName)) {\r\n        const nonce = getAttribute(node, \"nonce\");\r\n\r\n        if (nonce) {\r\n          setAttribute(node, \"_nonce\", nonce);\r\n          removeAttribute(node, \"nonce\");\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const files = __$ampere.config.files;\r\n  return (\r\n    // Handle quirks mode\r\n    (/^<!DOCTYPE html>/i.test(html) ? \"<!DOCTYPE html>\" : \"\") +\r\n    \"<head>\" +\r\n    // Default favicon\r\n    `  <link rel=\"icon\" href=\"${__$ampere.rewriteURL(\r\n      \"/favicon.ico\",\r\n      meta\r\n    )}\" />` +\r\n    // Inject proxy scripts\r\n    `  <script>Object.defineProperty(Object.prototype,\"__$ampere\",{value:Object.assign(globalThis.__$ampere||{},{base:\"${meta.toString()}\",cookie:\"${cookie}\"}),configurable:false,enumerable:false});</script>` +\r\n    `  <script src=\"${files.directory + files.config}\"></script>` +\r\n    `  <script src=\"${files.directory + files.bundle}\"></script>` +\r\n    `  <script src=\"${files.directory + files.client}\"></script>` +\r\n    \"</head>\" +\r\n    // Serialize rewritten HTML\r\n    serialize(document)\r\n  );\r\n}\r\n", "import { rewriteCSS } from \"./css\";\r\nimport { rewriteHTML } from \"./html\";\r\nimport { rewriteJS } from \"./js\";\r\n\r\nexport function rewriteURL(url: string | URL, meta: string | URL): string {\r\n  // Cases where we don't want to rewrite\r\n  if (url.toString().startsWith(__$ampere.config.prefix)) return url.toString();\r\n  if (/^blob:/.test(url.toString())) return url.toString();\r\n\r\n  __$ampere.logger.debug(`Rewriting url ${url} with scope ${meta}`);\r\n\r\n  if (/^data:/.test(url.toString())) {\r\n    const contentType = url.toString().match(/^data:(.*?)(;|,)/)?.[1] ?? \"\";\r\n    const isBase64 = /;base64,$/.test(url.toString());\r\n    const content = url\r\n      .toString()\r\n      .slice(`data:${contentType}${isBase64 ? \";base64\" : \"\"},`.length);\r\n\r\n    const data = isBase64 ? atob(content) : decodeURIComponent(content);\r\n\r\n    let rewritten = data;\r\n    if (contentType === \"text/html\") {\r\n      rewritten = rewriteHTML(data, meta, __$ampere.cookie ?? \"\");\r\n    } else if (\r\n      contentType === \"application/javascript\" ||\r\n      contentType === \"text/javascript\"\r\n    ) {\r\n      rewritten = rewriteJS(data, meta);\r\n    } else if (contentType === \"text/css\") {\r\n      rewritten = rewriteCSS(data, meta);\r\n    } else {\r\n      return url.toString();\r\n    }\r\n\r\n    return `data:${contentType}${isBase64 ? \";base64\" : \"\"},${\r\n      isBase64 ? btoa(rewritten) : encodeURIComponent(rewritten)\r\n    }`;\r\n  }\r\n\r\n  if (/^javascript:/.test(url.toString())) {\r\n    const script = decodeURIComponent(\r\n      url.toString().slice(\"javascript:\".length)\r\n    );\r\n    const rewritten = __$ampere.rewriteJS(script, meta);\r\n\r\n    return `javascript:${encodeURIComponent(rewritten)}`;\r\n  }\r\n\r\n  return `/~/` + __$ampere.config.codec.encode(new URL(url, meta).href);\r\n}\r\n", "import { rewriteURL } from \"./url\";\r\n\r\nexport function rewriteCSS(css: string, meta: string | URL): string {\r\n  // Regex fuckery\r\n  return css.replace(\r\n    /(?<!(?:[\"']|@import\\s*))(?:@import\\s*(?:url)?|url)\\(?['\"]?(?<url>.*?)['\")]/gim,\r\n    (...args) => {\r\n      try {\r\n        const groups = args[args.length - 1];\r\n\r\n        if (groups.url) {\r\n          return args[0].replace(groups.url, rewriteURL(groups.url, meta));\r\n        } else {\r\n          return args[0];\r\n        }\r\n      } catch (e) {\r\n        __$ampere.logger.error(\"Failed to rewrite CSS\", e);\r\n        return args[0];\r\n      }\r\n    }\r\n  );\r\n}\r\n", "import { rewriteURL } from \"./url\";\r\nimport { WebAppManifest } from \"web-app-manifest\";\r\n\r\nfunction rewriteSrcKey(resource: { src?: string }, meta: string | URL) {\r\n  if (resource.src) {\r\n    resource.src = rewriteURL(resource.src, meta);\r\n  }\r\n\r\n  return resource;\r\n}\r\n\r\nfunction rewriteUrlKey(resource: { url?: string }, meta: string | URL) {\r\n  if (resource.url) {\r\n    resource.url = rewriteURL(resource.url, meta);\r\n  }\r\n\r\n  return resource;\r\n}\r\n\r\nexport function rewriteManifest(manifest: string, meta: string | URL): string {\r\n  try {\r\n    const parsed = JSON.parse(manifest) as WebAppManifest;\r\n\r\n    // Rewrite icons\r\n    if (parsed.icons) {\r\n      for (const icon of parsed.icons) {\r\n        rewriteSrcKey(icon, meta);\r\n      }\r\n    }\r\n\r\n    // Rewrite screenshots\r\n    if (parsed.screenshots) {\r\n      for (const screenshot of parsed.screenshots) {\r\n        rewriteSrcKey(screenshot, meta);\r\n      }\r\n    }\r\n\r\n    // Rewrite start url\r\n    if (parsed.start_url) {\r\n      parsed.start_url = rewriteURL(parsed.start_url, meta);\r\n    }\r\n\r\n    // Rewrite scope\r\n    if (parsed.scope) {\r\n      parsed.scope = rewriteURL(parsed.scope, meta);\r\n    }\r\n\r\n    // Rewrite related applications\r\n    if (parsed.related_applications) {\r\n      for (const app of parsed.related_applications) {\r\n        rewriteUrlKey(app, meta);\r\n      }\r\n    }\r\n\r\n    // Rewrite shortcuts\r\n    if (parsed.shortcuts) {\r\n      for (const shortcut of parsed.shortcuts) {\r\n        rewriteUrlKey(shortcut, meta);\r\n\r\n        if (shortcut.icons) {\r\n          for (const icon of shortcut.icons) {\r\n            rewriteSrcKey(icon, meta);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return JSON.stringify(parsed);\r\n  } catch (e) {\r\n    __$ampere.logger.warn(\r\n      `Failed to parse manifest, returning unwritten content ${manifest}`,\r\n      e\r\n    );\r\n\r\n    return manifest;\r\n  }\r\n}\r\n", "export function unwriteURL(url: string): string {\r\n  if (!url || !url.startsWith(__$ampere.config.prefix)) return url;\r\n\r\n  return __$ampere.config.codec.decode(\r\n    url.slice(__$ampere.config.prefix.length)\r\n  );\r\n}\r\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n", "import { openDB, IDBPDatabase } from \"idb\";\r\nimport { Cookie } from \"set-cookie-parser\";\r\n\r\nexport class CookieDB {\r\n  db: Promise<\r\n    IDBPDatabase<{\r\n      cookies: {\r\n        key: string;\r\n        value: Cookie;\r\n      };\r\n    }>\r\n  >;\r\n\r\n  constructor() {\r\n    this.db = openDB(\"__$ampere\", 1, {\r\n      upgrade(db) {\r\n        db.createObjectStore(\"cookies\");\r\n      }\r\n    });\r\n  }\r\n\r\n  async findCookies(domain: string, path: string): Promise<Cookie[]> {\r\n    const db = await this.db;\r\n\r\n    const allCookies = await db.getAll(\"cookies\");\r\n\r\n    const cookies = allCookies.filter(\r\n      (cookie) =>\r\n        domainMatch(domain, cookie.domain ?? \"\") &&\r\n        pathMatch(path, cookie.path ?? \"/\")\r\n    );\r\n\r\n    return cookies;\r\n  }\r\n\r\n  async putCookie(cookie: Cookie): Promise<void> {\r\n    const db = await this.db;\r\n\r\n    cookie.domain = cookie.domain?.replace(/^\\./, \"\");\r\n\r\n    await db.put(\r\n      \"cookies\",\r\n      cookie,\r\n      `${cookie.domain}:${cookie.path}:${cookie.name}`\r\n    );\r\n  }\r\n\r\n  async removeCookie(domain: string, path: string, key: string): Promise<void> {\r\n    const db = await this.db;\r\n\r\n    await db.delete(\"cookies\", `${domain}:${path}:${key}`);\r\n  }\r\n\r\n  async removeCookies(domain: string, path: string): Promise<void> {\r\n    const db = await this.db;\r\n\r\n    const cookies = await db.getAll(\"cookies\");\r\n\r\n    for (const cookie of cookies) {\r\n      if (cookie.domain === domain && cookie.path === path) {\r\n        await db.delete(\r\n          \"cookies\",\r\n          `${cookie.domain}:${cookie.path}:${cookie.name}`\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async removeAllCookies(): Promise<void> {\r\n    const db = await this.db;\r\n\r\n    await db.clear(\"cookies\");\r\n  }\r\n\r\n  async getAllCookies(): Promise<Cookie[]> {\r\n    const db = await this.db;\r\n\r\n    const cookies = await db.getAll(\"cookies\");\r\n\r\n    return cookies;\r\n  }\r\n}\r\n\r\nconst IP_REGEX =\r\n  /(?:^(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}$)|(?:^(?:(?:[a-f\\d]{1,4}:){7}(?:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){6}(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|:[a-f\\d]{1,4}|:)|(?:[a-f\\d]{1,4}:){5}(?::(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,2}|:)|(?:[a-f\\d]{1,4}:){4}(?:(?::[a-f\\d]{1,4}){0,1}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,3}|:)|(?:[a-f\\d]{1,4}:){3}(?:(?::[a-f\\d]{1,4}){0,2}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,4}|:)|(?:[a-f\\d]{1,4}:){2}(?:(?::[a-f\\d]{1,4}){0,3}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,5}|:)|(?:[a-f\\d]{1,4}:){1}(?:(?::[a-f\\d]{1,4}){0,4}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,6}|:)|(?::(?:(?::[a-f\\d]{1,4}){0,5}:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)){3}|(?::[a-f\\d]{1,4}){1,7}|:)))$)/;\r\n\r\nexport function domainMatch(domStr: string, str: string): boolean | null {\r\n  if (str == domStr) {\r\n    return true;\r\n  }\r\n\r\n  const i = str.lastIndexOf(domStr);\r\n  if (i <= 0) {\r\n    return false;\r\n  }\r\n\r\n  if (str.length !== domStr.length + i) {\r\n    return false;\r\n  }\r\n\r\n  if (str.substr(i - 1, 1) !== \".\") {\r\n    return false;\r\n  }\r\n\r\n  return !IP_REGEX.test(str);\r\n}\r\n\r\nexport function pathMatch(reqPath: string, cookiePath: string): boolean {\r\n  if (cookiePath === reqPath) {\r\n    return true;\r\n  }\r\n\r\n  const i = reqPath.indexOf(cookiePath);\r\n  if (i === 0) {\r\n    if (cookiePath[cookiePath.length - 1] === \"/\") {\r\n      return true;\r\n    }\r\n\r\n    if (\r\n      new RegExp(`^${cookiePath}`).test(reqPath) &&\r\n      reqPath[cookiePath.length] === \"/\"\r\n    ) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n", "import { CookieDB, domainMatch, pathMatch } from \"./CookieDB\";\r\nimport { parse } from \"set-cookie-parser\";\r\n\r\nexport const cookieJar = new CookieDB();\r\n\r\nexport async function setCookie(\r\n  cookieString: string,\r\n  meta: string | URL\r\n): Promise<void> {\r\n  const cookie = parse(cookieString, {\r\n    decodeValues: true,\r\n    silent: true\r\n  })[0];\r\n\r\n  if (!cookie.domain) {\r\n    cookie.domain = new URL(meta).host;\r\n  }\r\n\r\n  if (!cookie.path) {\r\n    cookie.path = \"/\";\r\n  }\r\n\r\n  if (cookie.expires) {\r\n    if (cookie.expires.getTime() < Date.now()) {\r\n      if (\r\n        domainMatch(new URL(meta).host, cookie.domain) &&\r\n        pathMatch(new URL(meta).pathname, cookie.path)\r\n      ) {\r\n        await cookieJar.removeCookie(cookie.domain, cookie.path, cookie.name);\r\n      } else {\r\n        __$ampere.logger.warn(\r\n          \"Attempted to set cookie for invalid domain or path.\",\r\n          cookieString\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  if (\r\n    domainMatch(new URL(meta).host, cookie.domain) &&\r\n    pathMatch(new URL(meta).pathname, cookie.path)\r\n  ) {\r\n    await cookieJar.putCookie(cookie);\r\n  } else {\r\n    __$ampere.logger.warn(\r\n      \"Attempted to set cookie for invalid domain or path.\",\r\n      cookieString\r\n    );\r\n  }\r\n}\r\n\r\nexport async function getCookie(\r\n  meta: string | URL\r\n): Promise<string | undefined> {\r\n  const cookies = await cookieJar.findCookies(\r\n    new URL(meta).host,\r\n    new URL(meta).pathname\r\n  );\r\n\r\n  return cookies.map((cookie) => `${cookie.name}=${cookie.value}`).join(\"; \");\r\n}\r\n", "export const logger = {\r\n  log: (level: number, ...args: any[]) => {\r\n    if (level <= globalThis.__$ampere.config.logLevel) {\r\n      switch (level) {\r\n        case 1:\r\n          console.log(\"\\x1B[35m[Ampere] \\x1B[31mERROR:\", ...args);\r\n          break;\r\n        case 2:\r\n          console.log(\"\\x1B[35m[Ampere] \\x1B[33mWARN:\", ...args);\r\n          break;\r\n        case 3:\r\n          console.log(\"\\x1B[35m[Ampere] \\x1B[32mINFO:\", ...args);\r\n          break;\r\n        case 4:\r\n          console.log(\"\\x1B[35m[Ampere] \\x1B[34mDEBUG:\", ...args);\r\n          break;\r\n      }\r\n    }\r\n  },\r\n  error: (...args: any[]) => logger.log(1, ...args),\r\n  warn: (...args: any[]) => logger.log(2, ...args),\r\n  info: (...args: any[]) => logger.log(3, ...args),\r\n  debug: (...args: any[]) => logger.log(4, ...args)\r\n};\r\n", "// The user likely has overwritten all networking functions after importing bare-client\n// It is our responsibility to make sure components of Bare-Client are using native networking functions\n\n// These exports are provided to plugins by @rollup/plugin-inject\n\nexport const fetch = globalThis.fetch;\nexport const WebSocket = globalThis.WebSocket;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport const XMLHttpRequest = globalThis.XMLHttpRequest;\n\nexport const WebSocketFields = {\n\tprototype: {\n\t\tsend: WebSocket.prototype.send,\n\t},\n\tCLOSED: WebSocket.CLOSED,\n\tCLOSING: WebSocket.CLOSING,\n\tCONNECTING: WebSocket.CONNECTING,\n\tOPEN: WebSocket.OPEN,\n};\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type BareMethod =\n\t| 'GET'\n\t| 'POST'\n\t| 'DELETE'\n\t| 'OPTIONS'\n\t| 'PUT'\n\t| 'PATCH'\n\t| 'UPDATE'\n\t| string;\n\nexport type BareCache =\n\t| 'default'\n\t| 'no-store'\n\t| 'reload'\n\t| 'no-cache'\n\t| 'force-cache'\n\t| 'only-if-cached'\n\t| string;\n\nexport interface BareWebSocketMeta {\n\tprotocol: string;\n\tsetCookies: string[];\n}\n\nexport type BareHTTPProtocol = 'blob:' | 'http:' | 'https:' | string;\nexport type BareWSProtocol = 'ws:' | 'wss:' | string;\n\nexport type urlLike = URL | string;\n\nexport const maxRedirects = 20;\n\nexport type BareHeaders = Record<string, string | string[]>;\n\n/**\n * A Response with additional properties.\n */\nexport interface BareResponse extends Response {\n\trawResponse: Response;\n\trawHeaders: BareHeaders;\n}\n\n/**\n * A BareResponse with additional properties.\n */\nexport interface BareResponseFetch extends BareResponse {\n\tfinalURL: string;\n}\n\nexport interface BareMaintainer {\n\temail?: string;\n\twebsite?: string;\n}\n\nexport interface BareProject {\n\tname?: string;\n\tdescription?: string;\n\temail?: string;\n\twebsite?: string;\n\trepository?: string;\n\tversion?: string;\n}\n\nexport type BareLanguage =\n\t| 'NodeJS'\n\t| 'ServiceWorker'\n\t| 'Deno'\n\t| 'Java'\n\t| 'PHP'\n\t| 'Rust'\n\t| 'C'\n\t| 'C++'\n\t| 'C#'\n\t| 'Ruby'\n\t| 'Go'\n\t| 'Crystal'\n\t| 'Shell'\n\t| string;\n\nexport interface BareManifest {\n\tmaintainer?: BareMaintainer;\n\tproject?: BareProject;\n\tversions: string[];\n\tlanguage: BareLanguage;\n\tmemoryUsage?: number;\n}\n", "import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n\tBareWebSocketMeta,\n} from './BareTypes.js';\n\nexport const statusEmpty = [101, 204, 205, 304];\nexport const statusRedirect = [301, 302, 303, 307, 308];\n\nexport interface BareErrorBody {\n\tcode: string;\n\tid: string;\n\tmessage?: string;\n\tstack?: string;\n}\n\nexport class BareError extends Error {\n\tstatus: number;\n\tbody: BareErrorBody;\n\tconstructor(status: number, body: BareErrorBody) {\n\t\tsuper(body.message || body.code);\n\t\tthis.status = status;\n\t\tthis.body = body;\n\t}\n}\n\nexport type MetaCallback = (meta: BareWebSocketMeta) => void;\nexport type ReadyStateCallback = (readyState: number) => void;\nexport type WebSocketImpl = {\n\tnew (...args: ConstructorParameters<typeof WebSocket>): WebSocket;\n};\nexport type GetRequestHeadersCallback = () => Promise<BareHeaders>;\n\nexport abstract class Client {\n\tabstract connect(\n\t\tremote: URL,\n\t\tprotocols: string[],\n\t\tgetRequestHeaders: GetRequestHeadersCallback,\n\t\tonMeta: MetaCallback,\n\t\tonReadyState: ReadyStateCallback,\n\t\twebSocketImpl: WebSocketImpl\n\t): WebSocket;\n\tabstract request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BodyInit | null,\n\t\tremote: URL,\n\t\tcache: BareCache | undefined,\n\t\tduplex: string | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse>;\n\tprotected base: URL;\n\t/**\n\t *\n\t * @param version Version provided by extension\n\t * @param server Bare Server URL provided by BareClient\n\t */\n\tconstructor(version: number, server: URL) {\n\t\tthis.base = new URL(`./v${version}/`, server);\n\t}\n}\n", "/*\n * JavaScript MD5\n * Adopted from https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n\n/**\n * Add integers, wrapping at 2^32.\n * This uses 16-bit operations internally to work around bugs in interpreters.\n *\n * @param x First integer\n * @param y Second integer\n * @returns Sum\n */\nfunction safeAdd(x: number, y: number): number {\n\tconst lsw = (x & 0xffff) + (y & 0xffff);\n\tconst msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\treturn (msw << 16) | (lsw & 0xffff);\n}\n\n/**\n * Bitwise rotate a 32-bit number to the left.\n *\n * @param num 32-bit number\n * @param cnt Rotation count\n * @returns  Rotated number\n */\nfunction bitRotateLeft(num: number, cnt: number): number {\n\treturn (num << cnt) | (num >>> (32 - cnt));\n}\n\n/**\n * Basic operation the algorithm uses.\n *\n * @param q q\n * @param a a\n * @param b b\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5cmn(\n\tq: number,\n\ta: number,\n\tb: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ff(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & c) | (~b & d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5gg(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn((b & d) | (c & ~d), a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5hh(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n/**\n * Basic operation the algorithm uses.\n *\n * @param a a\n * @param b b\n * @param c c\n * @param d d\n * @param x x\n * @param s s\n * @param t t\n * @returns Result\n */\nfunction md5ii(\n\ta: number,\n\tb: number,\n\tc: number,\n\td: number,\n\tx: number,\n\ts: number,\n\tt: number\n): number {\n\treturn md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/**\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n *\n * @param x Array of little-endian words\n * @param len Bit length\n * @returns MD5 Array\n */\nfunction binlMD5(x: number[], len: number): number[] {\n\t/* append padding */\n\tx[len >> 5] |= 0x80 << len % 32;\n\tx[(((len + 64) >>> 9) << 4) + 14] = len;\n\n\tlet a = 1732584193;\n\tlet b = -271733879;\n\tlet c = -1732584194;\n\tlet d = 271733878;\n\n\tfor (let i = 0; i < x.length; i += 16) {\n\t\tconst olda = a;\n\t\tconst oldb = b;\n\t\tconst oldc = c;\n\t\tconst oldd = d;\n\n\t\ta = md5ff(a, b, c, d, x[i], 7, -680876936);\n\t\td = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n\t\tc = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n\t\tb = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n\t\ta = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n\t\td = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n\t\tc = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n\t\tb = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n\t\ta = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n\t\td = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n\t\tc = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n\t\tb = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n\t\ta = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n\t\td = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n\t\tc = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n\t\tb = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n\n\t\ta = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n\t\td = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n\t\tc = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n\t\tb = md5gg(b, c, d, a, x[i], 20, -373897302);\n\t\ta = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n\t\td = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n\t\tc = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n\t\tb = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n\t\ta = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n\t\td = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n\t\tc = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n\t\tb = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n\t\ta = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n\t\td = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n\t\tc = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n\t\tb = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n\n\t\ta = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n\t\td = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n\t\tc = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n\t\tb = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n\t\ta = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n\t\td = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n\t\tc = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n\t\tb = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n\t\ta = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n\t\td = md5hh(d, a, b, c, x[i], 11, -358537222);\n\t\tc = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n\t\tb = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n\t\ta = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n\t\td = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n\t\tc = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n\t\tb = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n\n\t\ta = md5ii(a, b, c, d, x[i], 6, -198630844);\n\t\td = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n\t\tc = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n\t\tb = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n\t\ta = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n\t\td = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n\t\tc = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n\t\tb = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n\t\ta = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n\t\td = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n\t\tc = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n\t\tb = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n\t\ta = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n\t\td = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n\t\tc = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n\t\tb = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n\n\t\ta = safeAdd(a, olda);\n\t\tb = safeAdd(b, oldb);\n\t\tc = safeAdd(c, oldc);\n\t\td = safeAdd(d, oldd);\n\t}\n\treturn [a, b, c, d];\n}\n\n/**\n * Convert an array of little-endian words to a string\n *\n * @param input MD5 Array\n * @returns MD5 string\n */\nfunction binl2rstr(input: number[]): string {\n\tlet output = '';\n\tconst length32 = input.length * 32;\n\tfor (let i = 0; i < length32; i += 8) {\n\t\toutput += String.fromCharCode((input[i >> 5] >>> i % 32) & 0xff);\n\t}\n\treturn output;\n}\n\n/**\n * Convert a raw string to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n *\n * @param input Raw input string\n * @returns Array of little-endian words\n */\nfunction rstr2binl(input: string): number[] {\n\tconst output: number[] = [];\n\tconst outputLen = input.length >> 2;\n\tfor (let i = 0; i < outputLen; i += 1) {\n\t\toutput[i] = 0;\n\t}\n\tconst length8 = input.length * 8;\n\tfor (let i = 0; i < length8; i += 8) {\n\t\toutput[i >> 5]! |= (input.charCodeAt(i / 8) & 0xff) << i % 32;\n\t}\n\treturn <number[]>output;\n}\n\n/**\n * Calculate the MD5 of a raw string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rstrMD5(s: string): string {\n\treturn binl2rstr(binlMD5(rstr2binl(s), s.length * 8));\n}\n\n/**\n * Calculates the HMAC-MD5 of a key and some data (raw strings)\n *\n * @param key HMAC key\n * @param data Raw input string\n * @returns Raw MD5 string\n */\nfunction rstrHMACMD5(key: string, data: string): string {\n\tlet bkey = rstr2binl(key);\n\tconst ipad: number[] = [];\n\tconst opad: number[] = [];\n\tif (bkey.length > 16) {\n\t\tbkey = binlMD5(bkey, key.length * 8);\n\t}\n\tfor (let i = 0; i < 16; i += 1) {\n\t\tipad[i] = bkey[i] ^ 0x36363636;\n\t\topad[i] = bkey[i] ^ 0x5c5c5c5c;\n\t}\n\tconst hash = binlMD5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);\n\treturn binl2rstr(binlMD5(opad.concat(hash), 512 + 128));\n}\n\n/**\n * Convert a raw string to a hex string\n *\n * @param input Raw input string\n * @returns Hex encoded string\n */\nfunction rstr2hex(input: string): string {\n\tconst hexTab = '0123456789abcdef';\n\tlet output = '';\n\tfor (let i = 0; i < input.length; i += 1) {\n\t\tconst x = input.charCodeAt(i);\n\t\toutput += hexTab.charAt((x >>> 4) & 0x0f) + hexTab.charAt(x & 0x0f);\n\t}\n\treturn output;\n}\n\n/**\n * Encode a string as UTF-8\n *\n * @param input Input string\n * @returns UTF8 string\n */\nfunction str2rstrUTF8(input: string): string {\n\treturn unescape(encodeURIComponent(input));\n}\n\n/**\n * Encodes input string as raw MD5 string\n *\n * @param s Input string\n * @returns Raw MD5 string\n */\nfunction rawMD5(s: string): string {\n\treturn rstrMD5(str2rstrUTF8(s));\n}\n/**\n * Encodes input string as Hex encoded string\n *\n * @param s Input string\n * @returns Hex encoded string\n */\nfunction hexMD5(s: string): string {\n\treturn rstr2hex(rawMD5(s));\n}\n/**\n * Calculates the raw HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction rawHMACMD5(k: string, d: string): string {\n\treturn rstrHMACMD5(str2rstrUTF8(k), str2rstrUTF8(d));\n}\n/**\n * Calculates the Hex encoded HMAC-MD5 for the given key and data\n *\n * @param k HMAC key\n * @param d Input string\n * @returns Raw MD5 string\n */\nfunction hexHMACMD5(k: string, d: string): string {\n\treturn rstr2hex(rawHMACMD5(k, d));\n}\n\n/**\n * Calculates MD5 value for a given string.\n * If a key is provided, calculates the HMAC-MD5 value.\n * Returns a Hex encoded string unless the raw argument is given.\n *\n * @param string Input string\n * @param key HMAC key\n * @param raw Raw output switch\n * @returns MD5 output\n */\nexport default function md5(\n\tstring: string,\n\tkey?: string,\n\traw?: boolean\n): string {\n\tif (!key) {\n\t\tif (!raw) {\n\t\t\treturn hexMD5(string);\n\t\t}\n\t\treturn rawMD5(string);\n\t}\n\tif (!raw) {\n\t\treturn hexHMACMD5(key, string);\n\t}\n\treturn rawHMACMD5(key, string);\n}\n", "import { BareError } from './Client';\n\nconst MAX_HEADER_VALUE = 3072;\n\n/**\n *\n * Splits headers according to spec\n * @param headers\n * @returns Split headers\n */\nexport function splitHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tif (headers.has('x-bare-headers')) {\n\t\tconst value = headers.get('x-bare-headers')!;\n\n\t\tif (value.length > MAX_HEADER_VALUE) {\n\t\t\toutput.delete('x-bare-headers');\n\n\t\t\tlet split = 0;\n\n\t\t\tfor (let i = 0; i < value.length; i += MAX_HEADER_VALUE) {\n\t\t\t\tconst part = value.slice(i, i + MAX_HEADER_VALUE);\n\n\t\t\t\tconst id = split++;\n\t\t\t\toutput.set(`x-bare-headers-${id}`, `;${part}`);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output;\n}\n\n/**\n * Joins headers according to spec\n * @param headers\n * @returns Joined headers\n */\nexport function joinHeaders(headers: Headers): Headers {\n\tconst output = new Headers(headers);\n\n\tconst prefix = 'x-bare-headers';\n\n\tif (headers.has(`${prefix}-0`)) {\n\t\tconst join: string[] = [];\n\n\t\tfor (const [header, value] of headers) {\n\t\t\tif (!header.startsWith(prefix)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (!value.startsWith(';')) {\n\t\t\t\tthrow new BareError(400, {\n\t\t\t\t\tcode: 'INVALID_BARE_HEADER',\n\t\t\t\t\tid: `request.headers.${header}`,\n\t\t\t\t\tmessage: `Value didn't begin with semi-colon.`,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst id = parseInt(header.slice(prefix.length + 1));\n\n\t\t\tjoin[id] = value.slice(1);\n\n\t\t\toutput.delete(header);\n\t\t}\n\n\t\toutput.set(prefix, join.join(''));\n\t}\n\n\treturn output;\n}\n", "import type {\n\tBareCache,\n\tBareHeaders,\n\tBareMethod,\n\tBareResponse,\n} from './BareTypes.js';\nimport { BareError, Client, statusEmpty } from './Client.js';\nimport type {\n\tReadyStateCallback,\n\tMetaCallback,\n\tGetRequestHeadersCallback,\n} from './Client.js';\nimport type {\n\tBareResponseHeaders,\n\tSocketClientToServer,\n\tSocketServerToClient,\n} from './V3Types.js';\nimport md5 from './md5.js';\nimport { WebSocketFields } from './snapshot.js';\nimport { joinHeaders, splitHeaders } from './splitHeaderUtil.js';\n\nexport default class ClientV3 extends Client {\n\tws: URL;\n\thttp: URL;\n\tconstructor(server: URL) {\n\t\tsuper(3, server);\n\n\t\tthis.ws = new URL(this.base);\n\t\tthis.http = new URL(this.base);\n\n\t\tif (this.ws.protocol === 'https:') {\n\t\t\tthis.ws.protocol = 'wss:';\n\t\t} else {\n\t\t\tthis.ws.protocol = 'ws:';\n\t\t}\n\t}\n\tconnect(\n\t\tremote: URL,\n\t\tprotocols: string[],\n\t\tgetRequestHeaders: GetRequestHeadersCallback,\n\t\tonMeta: MetaCallback,\n\t\tonReadyState: ReadyStateCallback\n\t) {\n\t\tconst ws = new WebSocket(this.ws);\n\n\t\tconst cleanup = () => {\n\t\t\tws.removeEventListener('close', closeListener);\n\t\t\tws.removeEventListener('message', messageListener);\n\t\t};\n\n\t\tconst closeListener = () => {\n\t\t\tcleanup();\n\t\t};\n\n\t\tconst messageListener = (event: MessageEvent) => {\n\t\t\tcleanup();\n\n\t\t\t// ws.binaryType is irrelevant when sending text\n\t\t\tif (typeof event.data !== 'string')\n\t\t\t\tthrow new TypeError('the first websocket message was not a text frame');\n\n\t\t\tconst message = JSON.parse(event.data) as SocketServerToClient;\n\n\t\t\t// finally\n\t\t\tif (message.type !== 'open')\n\t\t\t\tthrow new TypeError('message was not of open type');\n\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\tonMeta({\n\t\t\t\tprotocol: message.protocol,\n\t\t\t\tsetCookies: message.setCookies,\n\t\t\t});\n\n\t\t\t// now we want the client to see the websocket is open and ready to communicate with the remote\n\t\t\tonReadyState(WebSocketFields.OPEN);\n\n\t\t\tws.dispatchEvent(new Event('open'));\n\t\t};\n\n\t\tws.addEventListener('close', closeListener);\n\t\tws.addEventListener('message', messageListener);\n\n\t\t// CONNECTED TO THE BARE SERVER, NOT THE REMOTE\n\t\tws.addEventListener(\n\t\t\t'open',\n\t\t\t(event) => {\n\t\t\t\t// we have to cancel this event because it doesn't reflect the connection to the remote\n\t\t\t\t// once we are actually connected to the remote, we can dispatch a fake open event.\n\t\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t\t// we need to fake the readyState value again so it remains CONNECTING\n\t\t\t\t// right now, it's open because we just connected to the remote\n\t\t\t\t// but we need to fake this from the client so it thinks it's still connecting\n\t\t\t\tonReadyState(WebSocketFields.CONNECTING);\n\n\t\t\t\tgetRequestHeaders().then((headers) =>\n\t\t\t\t\tWebSocketFields.prototype.send.call(\n\t\t\t\t\t\tws,\n\t\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\t\ttype: 'connect',\n\t\t\t\t\t\t\tremote: remote.toString(),\n\t\t\t\t\t\t\tprotocols,\n\t\t\t\t\t\t\theaders,\n\t\t\t\t\t\t\tforwardHeaders: [],\n\t\t\t\t\t\t} as SocketClientToServer)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\t// only block the open event once\n\t\t\t{ once: true }\n\t\t);\n\n\t\treturn ws;\n\t}\n\tasync request(\n\t\tmethod: BareMethod,\n\t\trequestHeaders: BareHeaders,\n\t\tbody: BodyInit | null,\n\t\tremote: URL,\n\t\tcache: BareCache | undefined,\n\t\tduplex: string | undefined,\n\t\tsignal: AbortSignal | undefined\n\t): Promise<BareResponse> {\n\t\tif (remote.protocol.startsWith('blob:')) {\n\t\t\tconst response = await fetch(remote);\n\t\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\t\tresponse.body,\n\t\t\t\tresponse\n\t\t\t);\n\n\t\t\tresult.rawHeaders = Object.fromEntries(response.headers);\n\t\t\tresult.rawResponse = response;\n\n\t\t\treturn result as BareResponse;\n\t\t}\n\n\t\tconst bareHeaders: BareHeaders = {};\n\n\t\tif (requestHeaders instanceof Headers) {\n\t\t\tfor (const [header, value] of requestHeaders) {\n\t\t\t\tbareHeaders[header] = value;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const header in requestHeaders) {\n\t\t\t\tbareHeaders[header] = requestHeaders[header];\n\t\t\t}\n\t\t}\n\n\t\tconst options: RequestInit = {\n\t\t\tcredentials: 'omit',\n\t\t\tmethod: method,\n\t\t\tsignal,\n\t\t};\n\n\t\tif (cache !== 'only-if-cached') {\n\t\t\toptions.cache = cache as RequestCache;\n\t\t}\n\n\t\tif (body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\n\t\tif (duplex !== undefined) {\n\t\t\t// @ts-ignore\n\t\t\toptions.duplex = duplex;\n\t\t}\n\n\t\toptions.headers = this.createBareHeaders(remote, bareHeaders);\n\n\t\tconst response = await fetch(\n\t\t\tthis.http + '?cache=' + md5(remote.toString()),\n\t\t\toptions\n\t\t);\n\n\t\tconst readResponse = await this.readBareResponse(response);\n\n\t\tconst result: Response & Partial<BareResponse> = new Response(\n\t\t\tstatusEmpty.includes(readResponse.status!) ? undefined : response.body,\n\t\t\t{\n\t\t\t\tstatus: readResponse.status,\n\t\t\t\tstatusText: readResponse.statusText ?? undefined,\n\t\t\t\theaders: new Headers(readResponse.headers as HeadersInit),\n\t\t\t}\n\t\t);\n\n\t\tresult.rawHeaders = readResponse.headers;\n\t\tresult.rawResponse = response;\n\n\t\treturn result as BareResponse;\n\t}\n\tprivate async readBareResponse(response: Response) {\n\t\tif (!response.ok) {\n\t\t\tthrow new BareError(response.status, await response.json());\n\t\t}\n\n\t\tconst responseHeaders = joinHeaders(response.headers);\n\n\t\tconst result: Partial<BareResponseHeaders> = {};\n\n\t\tconst xBareStatus = responseHeaders.get('x-bare-status');\n\t\tif (xBareStatus !== null) result.status = parseInt(xBareStatus);\n\n\t\tconst xBareStatusText = responseHeaders.get('x-bare-status-text');\n\t\tif (xBareStatusText !== null) result.statusText = xBareStatusText;\n\n\t\tconst xBareHeaders = responseHeaders.get('x-bare-headers');\n\t\tif (xBareHeaders !== null) result.headers = JSON.parse(xBareHeaders);\n\n\t\treturn result as BareResponseHeaders;\n\t}\n\tcreateBareHeaders(\n\t\tremote: URL,\n\t\tbareHeaders: BareHeaders,\n\t\tforwardHeaders: string[] = [],\n\t\tpassHeaders: string[] = [],\n\t\tpassStatus: number[] = []\n\t) {\n\t\tconst headers = new Headers();\n\n\t\theaders.set('x-bare-url', remote.toString());\n\t\theaders.set('x-bare-headers', JSON.stringify(bareHeaders));\n\n\t\tfor (const header of forwardHeaders) {\n\t\t\theaders.append('x-bare-forward-headers', header);\n\t\t}\n\n\t\tfor (const header of passHeaders) {\n\t\t\theaders.append('x-bare-pass-headers', header);\n\t\t}\n\n\t\tfor (const status of passStatus) {\n\t\t\theaders.append('x-bare-pass-status', status.toString());\n\t\t}\n\n\t\tsplitHeaders(headers);\n\n\t\treturn headers;\n\t}\n}\n", "/*\n * WebSocket helpers\n */\n\nconst validChars =\n\t\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\";\n\nexport function validProtocol(protocol: string): boolean {\n\tfor (let i = 0; i < protocol.length; i++) {\n\t\tconst char = protocol[i];\n\n\t\tif (!validChars.includes(char)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n", "import type {\n\tBareHeaders,\n\tBareManifest,\n\tBareResponse,\n\tBareResponseFetch,\n\turlLike,\n} from './BareTypes';\nimport { maxRedirects } from './BareTypes';\nimport type { Client, WebSocketImpl } from './Client';\nimport { statusRedirect } from './Client';\nimport ClientV3 from './V3';\nimport { WebSocketFields } from './snapshot';\nimport { validProtocol } from './webSocket';\n\nconst clientCtors: [string, { new (server: URL): Client }][] = [\n\t['v3', ClientV3],\n];\n\nexport async function fetchManifest(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareManifest> {\n\tconst outgoing = await fetch(server, { signal });\n\n\tif (!outgoing.ok) {\n\t\tthrow new Error(\n\t\t\t`Unable to fetch Bare meta: ${outgoing.status} ${await outgoing.text()}`\n\t\t);\n\t}\n\n\treturn await outgoing.json();\n}\n\n// get the unhooked value\nconst getRealReadyState = Object.getOwnPropertyDescriptor(\n\tWebSocket.prototype,\n\t'readyState'\n)!.get!;\n\nconst wsProtocols = ['ws:', 'wss:'];\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace BareWebSocket {\n\texport type GetReadyStateCallback = () => number;\n\texport type GetSendErrorCallback = () => Error | undefined;\n\texport type GetProtocolCallback = () => string;\n\texport type HeadersType = BareHeaders | Headers | undefined;\n\texport type HeadersProvider =\n\t\t| BareHeaders\n\t\t| (() => BareHeaders | Promise<BareHeaders>);\n\n\texport interface Options {\n\t\t/**\n\t\t * A provider of request headers to pass to the remote.\n\t\t * Usually one of `User-Agent`, `Origin`, and `Cookie`\n\t\t * Can be just the headers object or an synchronous/asynchronous function that returns the headers object\n\t\t */\n\t\theaders?: BareWebSocket.HeadersProvider;\n\t\t/**\n\t\t * A hook executed by this function with helper arguments for hooking the readyState property. If a hook isn't provided, bare-client will hook the property on the instance. Hooking it on an instance basis is good for small projects, but ideally the class should be hooked by the user of bare-client.\n\t\t */\n\t\treadyStateHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetReadyState: BareWebSocket.GetReadyStateCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A hook executed by this function with helper arguments for determining if the send function should throw an error. If a hook isn't provided, bare-client will hook the function on the instance.\n\t\t */\n\t\tsendErrorHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetSendError: BareWebSocket.GetSendErrorCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A hook executed by this function with the URL. If a hook isn't provided, bare-client will hook the URL.\n\t\t */\n\t\turlHook?: ((socket: WebSocket, url: URL) => void) | undefined;\n\t\t/**\n\t\t * A hook executed by this function with a helper for getting the current fake protocol. If a hook isn't provided, bare-client will hook the protocol.\n\t\t */\n\t\tprotocolHook?:\n\t\t\t| ((\n\t\t\t\t\tsocket: WebSocket,\n\t\t\t\t\tgetProtocol: BareWebSocket.GetProtocolCallback\n\t\t\t  ) => void)\n\t\t\t| undefined;\n\t\t/**\n\t\t * A callback executed by this function with an array of cookies. This is called once the metadata from the server is received.\n\t\t */\n\t\tsetCookiesCallback?: ((setCookies: string[]) => void) | undefined;\n\t\twebSocketImpl?: WebSocketImpl;\n\t}\n}\n\nexport class BareClient {\n\tmanifest?: BareManifest;\n\tprivate client?: Client;\n\tprivate server: URL;\n\tprivate working?: Promise<Client>;\n\tprivate onDemand: boolean;\n\tprivate onDemandSignal?: AbortSignal;\n\t/**\n\t * Lazily create a BareClient. Calls to fetch and connect will request the manifest once on-demand.\n\t * @param server A full URL to the bare server.\n\t * @param signal An abort signal for fetching the manifest on demand.\n\t */\n\tconstructor(server: string | URL, signal?: AbortSignal);\n\t/**\n\t * Immediately create a BareClient.\n\t * @param server A full URL to the bare server.\n\t * @param manifest A Bare server manifest.\n\t */\n\tconstructor(server: string | URL, manifest?: BareManifest);\n\tconstructor(server: string | URL, _?: BareManifest | AbortSignal) {\n\t\tthis.server = new URL(server);\n\n\t\tif (!_ || _ instanceof AbortSignal) {\n\t\t\tthis.onDemand = true;\n\t\t\tthis.onDemandSignal = _;\n\t\t} else {\n\t\t\tthis.onDemand = false;\n\t\t\tthis.loadManifest(_);\n\t\t}\n\t}\n\tprivate loadManifest(manifest: BareManifest) {\n\t\tthis.manifest = manifest;\n\t\tthis.client = this.getClient();\n\t\treturn this.client;\n\t}\n\tprivate demand() {\n\t\tif (!this.onDemand) return this.client!;\n\n\t\tif (!this.working)\n\t\t\tthis.working = fetchManifest(this.server, this.onDemandSignal)\n\t\t\t\t.then((manifest) => this.loadManifest(manifest))\n\t\t\t\t.catch((err) => {\n\t\t\t\t\t// allow the next request to re-fetch the manifest\n\t\t\t\t\t// this is to prevent BareClient from permanently failing when used on demand\n\t\t\t\t\tdelete this.working;\n\t\t\t\t\tthrow err;\n\t\t\t\t});\n\n\t\treturn this.working;\n\t}\n\tprivate getClient() {\n\t\t// newest-oldest\n\t\tfor (const [version, ctor] of clientCtors)\n\t\t\tif (this.manifest!.versions.includes(version))\n\t\t\t\treturn new ctor(this.server);\n\n\t\tthrow new Error(\n\t\t\t'Unable to find compatible client version. Starting from v2.0.0, @tomphttp/bare-client only supports Bare servers v3+. For more information, see https://github.com/tomphttp/bare-client/'\n\t\t);\n\t}\n\tcreateWebSocket(\n\t\tremote: urlLike,\n\t\tprotocols: string | string[] | undefined = [],\n\t\toptions: BareWebSocket.Options\n\t): WebSocket {\n\t\tif (!this.client)\n\t\t\tthrow new TypeError(\n\t\t\t\t'You need to wait for the client to finish fetching the manifest before creating any WebSockets. Try caching the manifest data before making this request.'\n\t\t\t);\n\n\t\ttry {\n\t\t\tremote = new URL(remote);\n\t\t} catch (err) {\n\t\t\tthrow new DOMException(\n\t\t\t\t`Faiiled to construct 'WebSocket': The URL '${remote}' is invalid.`\n\t\t\t);\n\t\t}\n\n\t\tif (!wsProtocols.includes(remote.protocol))\n\t\t\tthrow new DOMException(\n\t\t\t\t`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${remote.protocol}' is not allowed.`\n\t\t\t);\n\n\t\tif (!Array.isArray(protocols)) protocols = [protocols];\n\n\t\tprotocols = protocols.map(String);\n\n\t\tfor (const proto of protocols)\n\t\t\tif (!validProtocol(proto))\n\t\t\t\tthrow new DOMException(\n\t\t\t\t\t`Failed to construct 'WebSocket': The subprotocol '${proto}' is invalid.`\n\t\t\t\t);\n\n\t\tconst socket = this.client.connect(\n\t\t\tremote,\n\t\t\tprotocols,\n\t\t\tasync () => {\n\t\t\t\tconst resolvedHeaders =\n\t\t\t\t\ttypeof options.headers === 'function'\n\t\t\t\t\t\t? await options.headers()\n\t\t\t\t\t\t: options.headers || {};\n\n\t\t\t\tconst requestHeaders: BareHeaders =\n\t\t\t\t\tresolvedHeaders instanceof Headers\n\t\t\t\t\t\t? Object.fromEntries(resolvedHeaders)\n\t\t\t\t\t\t: resolvedHeaders;\n\n\t\t\t\t// user is expected to specify user-agent and origin\n\t\t\t\t// both are in spec\n\n\t\t\t\trequestHeaders['Host'] = (remote as URL).host;\n\t\t\t\t// requestHeaders['Origin'] = origin;\n\t\t\t\trequestHeaders['Pragma'] = 'no-cache';\n\t\t\t\trequestHeaders['Cache-Control'] = 'no-cache';\n\t\t\t\trequestHeaders['Upgrade'] = 'websocket';\n\t\t\t\t// requestHeaders['User-Agent'] = navigator.userAgent;\n\t\t\t\trequestHeaders['Connection'] = 'Upgrade';\n\n\t\t\t\treturn requestHeaders;\n\t\t\t},\n\t\t\t(meta) => {\n\t\t\t\tfakeProtocol = meta.protocol;\n\t\t\t\tif (options.setCookiesCallback)\n\t\t\t\t\toptions.setCookiesCallback(meta.setCookies);\n\t\t\t},\n\t\t\t(readyState) => {\n\t\t\t\tfakeReadyState = readyState;\n\t\t\t},\n\t\t\toptions.webSocketImpl || WebSocket\n\t\t);\n\n\t\t// protocol is always an empty before connecting\n\t\t// updated when we receive the metadata\n\t\t// this value doesn't change when it's CLOSING or CLOSED etc\n\t\tlet fakeProtocol = '';\n\n\t\tlet fakeReadyState: number = WebSocketFields.CONNECTING;\n\n\t\tconst getReadyState = () => {\n\t\t\tconst realReadyState = getRealReadyState.call(socket);\n\t\t\t// readyState should only be faked when the real readyState is OPEN\n\t\t\treturn realReadyState === WebSocketFields.OPEN\n\t\t\t\t? fakeReadyState\n\t\t\t\t: realReadyState;\n\t\t};\n\n\t\tif (options.readyStateHook) options.readyStateHook(socket, getReadyState);\n\t\telse {\n\t\t\t// we have to hook .readyState ourselves\n\n\t\t\tObject.defineProperty(socket, 'readyState', {\n\t\t\t\tget: getReadyState,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * @returns The error that should be thrown if send() were to be called on this socket according to the fake readyState value\n\t\t */\n\t\tconst getSendError = () => {\n\t\t\tconst readyState = getReadyState();\n\n\t\t\tif (readyState === WebSocketFields.CONNECTING)\n\t\t\t\treturn new DOMException(\n\t\t\t\t\t\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\"\n\t\t\t\t);\n\t\t};\n\n\t\tif (options.sendErrorHook) options.sendErrorHook(socket, getSendError);\n\t\telse {\n\t\t\t// we have to hook .send ourselves\n\t\t\t// use ...args to avoid giving the number of args a quantity\n\t\t\t// no arguments will trip the following error: TypeError: Failed to execute 'send' on 'WebSocket': 1 argument required, but only 0 present.\n\t\t\tsocket.send = function (...args) {\n\t\t\t\tconst error = getSendError();\n\n\t\t\t\tif (error) throw error;\n\t\t\t\telse WebSocketFields.prototype.send.call(this, ...args);\n\t\t\t};\n\t\t}\n\n\t\tif (options.urlHook) options.urlHook(socket, remote);\n\t\telse\n\t\t\tObject.defineProperty(socket, 'url', {\n\t\t\t\tget: () => remote.toString(),\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\n\t\tconst getProtocol = () => fakeProtocol;\n\n\t\tif (options.protocolHook) options.protocolHook(socket, getProtocol);\n\t\telse\n\t\t\tObject.defineProperty(socket, 'protocol', {\n\t\t\t\tget: getProtocol,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\n\t\treturn socket;\n\t}\n\n\tasync fetch(\n\t\turl: urlLike | Request,\n\t\tinit?: RequestInit\n\t): Promise<BareResponseFetch> {\n\t\tconst req = isUrlLike(url) ? new Request(url, init) : url;\n\n\t\t// try to use init.headers because it may contain capitalized headers\n\t\t// furthermore, important headers on the Request class are blocked...\n\t\t// we should try to preserve the capitalization due to quirks with earlier servers\n\t\tconst inputHeaders = init?.headers || req.headers;\n\n\t\tconst headers: BareHeaders =\n\t\t\tinputHeaders instanceof Headers\n\t\t\t\t? Object.fromEntries(inputHeaders)\n\t\t\t\t: (inputHeaders as BareHeaders);\n\n\t\t// @ts-ignore\n\t\tconst duplex: string | undefined = init?.duplex;\n\n\t\tconst body = init?.body || req.body;\n\n\t\tlet urlO = new URL(req.url);\n\n\t\tconst client = await this.demand();\n\n\t\tfor (let i = 0; ; i++) {\n\t\t\tif ('host' in headers) headers.host = urlO.host;\n\t\t\telse headers.Host = urlO.host;\n\n\t\t\tconst response: BareResponse & Partial<BareResponseFetch> =\n\t\t\t\tawait client.request(\n\t\t\t\t\treq.method,\n\t\t\t\t\theaders,\n\t\t\t\t\tbody,\n\t\t\t\t\turlO,\n\t\t\t\t\treq.cache,\n\t\t\t\t\tduplex,\n\t\t\t\t\treq.signal\n\t\t\t\t);\n\n\t\t\tresponse.finalURL = urlO.toString();\n\n\t\t\tconst redirect = init?.redirect || req.redirect;\n\n\t\t\tif (statusRedirect.includes(response.status)) {\n\t\t\t\tswitch (redirect) {\n\t\t\t\t\tcase 'follow': {\n\t\t\t\t\t\tconst location = response.headers.get('location');\n\t\t\t\t\t\tif (maxRedirects > i && location !== null) {\n\t\t\t\t\t\t\turlO = new URL(location, urlO);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else throw new TypeError('Failed to fetch');\n\t\t\t\t\t}\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\tthrow new TypeError('Failed to fetch');\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\treturn response as BareResponseFetch;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn response as BareResponseFetch;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction isUrlLike(url: unknown): url is urlLike {\n\treturn typeof url === 'string' || url instanceof URL;\n}\n", "import { BareClient, fetchManifest } from './BareClient';\n\nexport * from './Client';\nexport * from './BareTypes';\nexport * from './BareClient';\n\n/**\n *\n * Facilitates fetching the Bare server and constructing a BareClient.\n * @param server Bare server\n * @param signal Abort signal when fetching the manifest\n */\nexport async function createBareClient(\n\tserver: string | URL,\n\tsignal?: AbortSignal\n): Promise<BareClient> {\n\tconst manifest = await fetchManifest(server, signal);\n\n\treturn new BareClient(server, manifest);\n}\n", "import { rewriteCSS } from \"./rewrite/css\";\r\nimport { rewriteHTML } from \"./rewrite/html\";\r\nimport { rewriteJS } from \"./rewrite/js\";\r\nimport { rewriteManifest } from \"./rewrite/manifest\";\r\nimport { rewriteSrcSet } from \"./rewrite/srcset\";\r\nimport { unwriteURL } from \"./rewrite/unwriteURL\";\r\nimport { rewriteURL } from \"./rewrite/url\";\r\nimport { setCookie, getCookie } from \"./util/cookie\";\r\nimport { logger } from \"./util/logger\";\r\nimport { BareClient } from \"@tomphttp/bare-client\";\r\n\r\n// TODO: pick bare server with lowest latency\r\nlet bareClient: BareClient;\r\nconst bare: string = Array.isArray(__$ampere.config.server)\r\n  ? new URL(\r\n      __$ampere.config.server[\r\n        Math.floor(Math.random() * __$ampere.config.server.length)\r\n      ],\r\n      location.origin\r\n    ).href\r\n  : new URL(__$ampere.config.server, location.origin).href;\r\n\r\nif (Array.isArray(__$ampere.config.server)) {\r\n  bareClient = new BareClient(bare);\r\n} else {\r\n  bareClient = new BareClient(bare);\r\n}\r\n\r\nexport const bundle = {\r\n  rewriteCSS,\r\n  rewriteHTML,\r\n  rewriteJS,\r\n  rewriteSrcSet,\r\n  rewriteURL,\r\n  unwriteURL,\r\n  rewriteManifest,\r\n  logger,\r\n  bareClient,\r\n  bare,\r\n  setCookie,\r\n  getCookie\r\n};\r\n\r\nObject.defineProperty(Object.prototype, \"__$ampere\", {\r\n  value: Object.assign(globalThis.__$ampere || {}, bundle),\r\n  configurable: false,\r\n  enumerable: false\r\n});\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAEA,UAAI,sBAAsB;AAAA,QACxB,cAAc;AAAA,QACd,KAAK;AAAA,QACL,QAAQ;AAAA,MACV;AAEA,eAAS,iBAAiB,KAAK;AAC7B,eAAO,OAAO,QAAQ,YAAY,CAAC,CAAC,IAAI,KAAK;AAAA,MAC/C;AAEA,eAAS,YAAY,gBAAgB,SAAS;AAC5C,YAAI,QAAQ,eAAe,MAAM,GAAG,EAAE,OAAO,gBAAgB;AAE7D,YAAI,mBAAmB,MAAM,MAAM;AACnC,YAAI,SAAS,mBAAmB,gBAAgB;AAChD,YAAI,OAAO,OAAO;AAClB,YAAI,QAAQ,OAAO;AAEnB,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI;AACF,kBAAQ,QAAQ,eAAe,mBAAmB,KAAK,IAAI;AAAA,QAC7D,SAAS,GAAG;AACV,kBAAQ;AAAA,YACN,gFACE,QACA;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAEA,YAAI,SAAS;AAAA,UACX;AAAA,UACA;AAAA,QACF;AAEA,cAAM,QAAQ,SAAU,MAAM;AAC5B,cAAI,QAAQ,KAAK,MAAM,GAAG;AAC1B,cAAI,MAAM,MAAM,MAAM,EAAE,SAAS,EAAE,YAAY;AAC/C,cAAIA,SAAQ,MAAM,KAAK,GAAG;AAC1B,cAAI,QAAQ,WAAW;AACrB,mBAAO,UAAU,IAAI,KAAKA,MAAK;AAAA,UACjC,WAAW,QAAQ,WAAW;AAC5B,mBAAO,SAAS,SAASA,QAAO,EAAE;AAAA,UACpC,WAAW,QAAQ,UAAU;AAC3B,mBAAO,SAAS;AAAA,UAClB,WAAW,QAAQ,YAAY;AAC7B,mBAAO,WAAW;AAAA,UACpB,WAAW,QAAQ,YAAY;AAC7B,mBAAO,WAAWA;AAAA,UACpB,OAAO;AACL,mBAAO,GAAG,IAAIA;AAAA,UAChB;AAAA,QACF,CAAC;AAED,eAAO;AAAA,MACT;AAEA,eAAS,mBAAmB,kBAAkB;AAG5C,YAAI,OAAO;AACX,YAAI,QAAQ;AACZ,YAAI,eAAe,iBAAiB,MAAM,GAAG;AAC7C,YAAI,aAAa,SAAS,GAAG;AAC3B,iBAAO,aAAa,MAAM;AAC1B,kBAAQ,aAAa,KAAK,GAAG;AAAA,QAC/B,OAAO;AACL,kBAAQ;AAAA,QACV;AAEA,eAAO,EAAE,MAAY,MAAa;AAAA,MACpC;AAEA,eAASC,OAAM,OAAO,SAAS;AAC7B,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI,CAAC,OAAO;AACV,cAAI,CAAC,QAAQ,KAAK;AAChB,mBAAO,CAAC;AAAA,UACV,OAAO;AACL,mBAAO,CAAC;AAAA,UACV;AAAA,QACF;AAEA,YAAI,MAAM,SAAS;AACjB,cAAI,OAAO,MAAM,QAAQ,iBAAiB,YAAY;AAGpD,oBAAQ,MAAM,QAAQ,aAAa;AAAA,UACrC,WAAW,MAAM,QAAQ,YAAY,GAAG;AAEtC,oBAAQ,MAAM,QAAQ,YAAY;AAAA,UACpC,OAAO;AAEL,gBAAI,MACF,MAAM,QACJ,OAAO,KAAK,MAAM,OAAO,EAAE,KAAK,SAAU,KAAK;AAC7C,qBAAO,IAAI,YAAY,MAAM;AAAA,YAC/B,CAAC,CACH;AAEF,gBAAI,CAAC,OAAO,MAAM,QAAQ,UAAU,CAAC,QAAQ,QAAQ;AACnD,sBAAQ;AAAA,gBACN;AAAA,cACF;AAAA,YACF;AACA,oBAAQ;AAAA,UACV;AAAA,QACF;AACA,YAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,kBAAQ,CAAC,KAAK;AAAA,QAChB;AAEA,kBAAU,UACN,OAAO,OAAO,CAAC,GAAG,qBAAqB,OAAO,IAC9C;AAEJ,YAAI,CAAC,QAAQ,KAAK;AAChB,iBAAO,MAAM,OAAO,gBAAgB,EAAE,IAAI,SAAU,KAAK;AACvD,mBAAO,YAAY,KAAK,OAAO;AAAA,UACjC,CAAC;AAAA,QACH,OAAO;AACL,cAAI,UAAU,CAAC;AACf,iBAAO,MAAM,OAAO,gBAAgB,EAAE,OAAO,SAAUC,UAAS,KAAK;AACnE,gBAAI,SAAS,YAAY,KAAK,OAAO;AACrC,YAAAA,SAAQ,OAAO,IAAI,IAAI;AACvB,mBAAOA;AAAA,UACT,GAAG,OAAO;AAAA,QACZ;AAAA,MACF;AAaA,eAAS,mBAAmB,eAAe;AACzC,YAAI,MAAM,QAAQ,aAAa,GAAG;AAChC,iBAAO;AAAA,QACT;AACA,YAAI,OAAO,kBAAkB,UAAU;AACrC,iBAAO,CAAC;AAAA,QACV;AAEA,YAAI,iBAAiB,CAAC;AACtB,YAAI,MAAM;AACV,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AAEJ,iBAAS,iBAAiB;AACxB,iBAAO,MAAM,cAAc,UAAU,KAAK,KAAK,cAAc,OAAO,GAAG,CAAC,GAAG;AACzE,mBAAO;AAAA,UACT;AACA,iBAAO,MAAM,cAAc;AAAA,QAC7B;AAEA,iBAAS,iBAAiB;AACxB,eAAK,cAAc,OAAO,GAAG;AAE7B,iBAAO,OAAO,OAAO,OAAO,OAAO,OAAO;AAAA,QAC5C;AAEA,eAAO,MAAM,cAAc,QAAQ;AACjC,kBAAQ;AACR,kCAAwB;AAExB,iBAAO,eAAe,GAAG;AACvB,iBAAK,cAAc,OAAO,GAAG;AAC7B,gBAAI,OAAO,KAAK;AAEd,0BAAY;AACZ,qBAAO;AAEP,6BAAe;AACf,0BAAY;AAEZ,qBAAO,MAAM,cAAc,UAAU,eAAe,GAAG;AACrD,uBAAO;AAAA,cACT;AAGA,kBAAI,MAAM,cAAc,UAAU,cAAc,OAAO,GAAG,MAAM,KAAK;AAEnE,wCAAwB;AAExB,sBAAM;AACN,+BAAe,KAAK,cAAc,UAAU,OAAO,SAAS,CAAC;AAC7D,wBAAQ;AAAA,cACV,OAAO;AAGL,sBAAM,YAAY;AAAA,cACpB;AAAA,YACF,OAAO;AACL,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,cAAI,CAAC,yBAAyB,OAAO,cAAc,QAAQ;AACzD,2BAAe,KAAK,cAAc,UAAU,OAAO,cAAc,MAAM,CAAC;AAAA,UAC1E;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAEA,aAAO,UAAUD;AACjB,aAAO,QAAQ,QAAQA;AACvB,aAAO,QAAQ,cAAc;AAC7B,aAAO,QAAQ,qBAAqB;AAAA;AAAA;;;AChOpC,MAAI,wBAAwB,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAG3hC,MAAI,6BAA6B,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,IAAI,GAAG,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,IA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",
  "names": ["value", "parse", "cookies", "TokenType", "Position", "SourceLocation", "offset", "Parser", "ref", "parse", "DestructuringErrors", "TokContext", "Scope", "Node", "RegExpValidationState", "current", "Token", "LooseParser", "eat", "extend", "parse", "ref", "lineEnd", "i", "quasi", "length", "lineEnd", "parse", "CODE_POINTS", "ERR", "offset", "TokenType", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "offset", "_a", "current", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "isAsciiAlphaNumeric", "isEntityInAttributeInvalidEnd", "_a", "offset", "TokenType", "location", "current", "EntryType", "entry", "data", "location", "InsertionMode", "Parser", "_a", "current", "location", "TokenType", "data", "parse", "Parser", "createTextNode", "node", "createTextNode", "parse", "data", "data", "version", "target", "version", "data", "response", "result", "location"]
}
